{"pages":[],"posts":[{"title":"acer製モニター RG240Y の脚の取り外し方","text":"先日acer製モニターRG240Yを家から持ち出す用事があり箱に片付けようとしたのですが，モニターを支える脚が外れず困ってしまいました．説明書にも書いておらず検索ても出てこなかったので書き残しておきます． まずTの字の土台を外します．後ろに回せる機構があり工具は不要です． モニターと支えを外します．横から覗くと見える口(画像赤丸の中)にマイナスドライバーを突っ込み爪を押し込みます．そのままスライドすると外れ作業は完了です．気をつけてやれば傷つくことなく済みそうです． 中の構造は下の写真のようになっています． 説明書に記載がないのは優しくないですね．機構からするに外すことは想定されていないのかもしれません． document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/2021/04/14/acer-rg240y-put-away/"},{"title":"Adguard HomeをTailscale上に載せて任意デバイスで広告をブロックする","text":"Adguard HomeをTailscale上に載せます．Tailscaleを利用することで宅外の回線を利用していてもAdguard Homeを適用することができます．Tailscaleが使えるならあらゆるデバイスで無料で利用できます． コンテナを立ち上げるExit node指定で立ち上げます． docker-compose.yml 1234567891011121314151617181920version: \"2.4\"services: tailscale: hostname: centos-hosted-myhome # This will become the tailscale device name image: jonoh/tailscale volumes: - \"./tailscale_var_lib:/var/lib\" # State data will be stored in this directory - \"/dev/net/tun:/dev/net/tun\" # Required for tailscale to work cap_add: # Required for tailscale to work - net_admin - sys_module command: --advertise-exit-node -- --verbose 1 adguardhome: restart: unless-stopped volumes: - './adguard_data:/opt/adguardhome/work' - './adguard_config:/opt/adguardhome/conf' image: adguard/adguardhome network_mode: service:tailscale $ docker-compose up -d 起動して数秒するとログに認証URLが吐き出されます．開いてログインします． $ docker-compose logs 123456tailscale-tailscale-1 |tailscale-tailscale-1 | To authenticate, visit:tailscale-tailscale-1 |tailscale-tailscale-1 | https://login.tailscale.com/a/XXXXXXXXXXXXtailscale-tailscale-1 |tailscale-tailscale-1 | 2022/03/22 08:24:37 control: RegisterReq: onode= node=[iFaLD] fup=true 割り当てられた IP アドレスをコピーして DNS タブの Nameservers に指定します．override local dnsを選択します． これにて設定完了です． ブラウザで当該IPを開くとAdguard Homeの設定画面が出てくるので好みに合わせてブロック・許可ドメインを設定します． LINEの広告をブロックする先人のツイートを参考にAdguard Homeのカスタム・フィルタリングルールに書き込みます． 1234567891011121314// LINE Block// https://twitter.com/cyberflamingo/status/1494960795905830915||naver.jp^||line-scdn.net^||line-apps.com^||line.me^@@||d.line-scdn.net^@@||gw.line.naver.jp^@@||ln.cdn.akamaized.net^@@||obs-jp.line-apps.com^@@||profile.line-scdn.net^@@||scdn.line-apps.com^@@||torimochi.line-apps.com^@@||w.line.me^ モバイル回線でもブロックできていることを確認できました． document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/2022/03/22/adguardhome-on-tailscale/"},{"title":"AM2301Bを利用して温湿度を計測する","text":"AM2301Bというセンサを買ってきたのでNanoPi NEO2で動かしてみました． 秋月電子: 温湿度センサ モジュール ＡＭ２３０１Ｂ: センサ一般 秋月電子通商-電子部品・ネット通販 データシート: https://akizukidenshi.com/download/ds/aosong/AM2301B.pdf 生産している会社の商品紹介ページ: AM2301B Temperature and humidity sensor-RH&amp;T Sensors-Guangzhou Aosong Electronic Co., Ltd. 精度は温度: ±0.3℃, 湿度: ±2%RH(25℃) です． ⚙ NanoPiの設定NanoPiとAM2301BはI2Cで通信します． あらかじめNanoPi側でI2Cを有効化しておきます．NanoPiでArmbianを動かしているなら， 1$ sudo armbian-config System &gt; Hardware &gt; i2c0 にスペースキーで✅をいれます．EnterでSaveします． 🔌 NanoPiとAM2301Bを繋ぐ 右上内側のOUT - 3.3V，SDA，SCL，GNDを利用します． i2c-toolsで正しく接続できているかを確認します． 12$ sudo apt-get install i2c-tools$ sudo i2cdetect -y 0 で 1234567890 1 2 3 4 5 6 7 8 9 a b c d e f00: -- -- -- -- -- -- -- -- -- -- -- -- -- 10: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 20: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 30: -- -- -- -- -- -- -- -- 38 -- -- -- -- -- -- -- 40: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 50: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 60: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- 70: -- -- -- -- -- -- -- -- と返ってこれば成功です． ⚡️ Pythonで通信するsmbusというライブラリでI2C通信を行います． 1$ sudo apt-get install python3-smbus 適当にデータシートを読みながらコードを書いていきます．今回はCRC checkには目を瞑ることとします．誤差との兼ね合いはお好みで(もうちょっと細かくてもいい気がする)． 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748import smbusimport time# i2cバスの番号i2c = smbus.SMBus(0)# デバイスアドレスaddr = 0x38# デバイスの状態確認status = i2c.read_byte_data(addr, 0x71)if status != 0x18: # 初期化指示 i2c.write_i2c_block_data(addr, 0xBE, [0x08, 0x00]) time.sleep(0.1) status = i2c.read_byte_data(addr, 0x71) if status != 0x18: print(\"Device initialization failed.\") exit()# 計測指示i2c.write_i2c_block_data(addr, 0xAC, [0x33, 0x00])# 計測までは80ms以上おく必要がある．time.sleep(0.2)# 計測状態確認status = i2c.read_byte_data(addr, 0x71)# statusのBit[7]が0なら計測完了if format(status, '08b')[0] != \"0\": print(\"計測未完\") exit()# 測定結果を読み取りblock = i2c.read_i2c_block_data(addr,0,8)# 読み取り結果から温度湿度を計算hum = int(block[1] &lt;&lt; 12 | block[2] &lt;&lt; 4 | block[3] &gt;&gt; 4) * 100hum = int(hum &gt;&gt; 20)temp = int((block[3] &amp; 0b00001111) &lt;&lt; 16 | block[4] &lt;&lt; 8 | block[5]) * 200temp = float(temp &gt;&gt; 18) / 4temp -= 50print(\"T:\", temp, \" H:\", hum) それっぽい値が取得できました．よかった〜 初期化の方法はデータシートに載っていませんでしたが別のPDFには掲載されていました． InfluxDB + GrafanaInfluxDBに投げつけてGrafanaで可視化したらいい感じになります． センサの場所を固定してないためか急に変動する時間が発生してますね・・・． 様子見して設置場所とか精度をどこまで求めるかなどを調整した方が良さそうです． 感想秋葉原の秋月にふらっとよって手に取った温湿度センサでしたが発売直後すぎてデータシート以外の情報がなくうろたえました．(2021.08.31発売 / 2021.09.10購入) I2Cを利用したことがなかったので完全に手探りでしたが値が取れてよかったです．(間違ってたら指摘をお願いします…) document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/2021/09/20/am2301b/"},{"title":"AtCoderのACを監視するGoogleAppsScript(GAS)","text":"AtCoderのACを監視してSlackに投稿するだけのGoogleAppsScript(GAS) Incoming WebHooksのURLを取得して書き換えて利用する． ユーザ名は複数指定可能．チャンネル名も指定できる． payload部をいい感じにしたらDiscordでも使える． document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/2022/05/07/atcoder-ac-watcher/"},{"title":"Twitterのアイコンはちょっとした工夫で綺麗になる","text":"きれいなアイコンは見ていて気持ちが良いものです． 切り抜きたいTwitter でアップロードしたときに出てくる切り抜き機能を使うと画像が劣化します． そのため予め端末側で標準でついてる機能でもいいので画像を切り抜いて置くと良いでしょう． 画質の向上を図る切り抜くことで画質が悪くなっても画質を向上させる手段があります． waifu2xを試してみます． http://waifu2x.udp.jp/index.ja.htmlwaifu2x深層畳み込みニューラルネットワークによる二次元画像のための超解像システム。 写真にも対応。 2回目以上やるとちょっと違和感がある場合が増えてくるので何回か試行してみるといいでしょう。 この時にAPIのアップロード上限、700KBを超えないように気をつけます。 もし超えてしまった場合、またPCスマホの標準の切り抜き機能でちょっと切り抜くと画像容量がぐっと減ることがあるので試してみてください． アップロードこのサイトを利用します。 TwitterのアイコンをAPI経由でアップロードするツール https://retrorocket.biz/upico/TwitterのアイコンをAPI経由でアップロードするツール サイト下の注意点をよく読んで利用しましょう． よく失敗するのは「700KB以上の画像をアップロードできない」「iOSからPNGの透過データが黒くなる」です． 4.完成自分のTwitterを見ると大きく綺麗な画像がアップロードできていることが確認できます． 公式のスマホアプリからだとアプリ側でまた画像が縮小するので効果がわかりにくいかもしれませんが，公式以外のアプリやWeb版公式を使ったりすると綺麗な画像をアップロードできていることがよくわかります． document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/2017/04/07/better-twitter-icon-upload/"},{"title":"bootstrap-vueを利用するとsr-only要素が見える問題","text":"bootstrap-vueのGetting Startedにしたがってインストールすると謎の文字がでてくることがあります． 例えば… ✅ 解決策$ npm install bootstrap@4.5.3 これ何謎の文字は sr-only というクラスを持っています．&lt;label class=\"sr-only\" id=\"_BVID__6__value\" for=\"__BVID__6\"&gt;2021年9月19日日曜日&lt;/label&gt;これはスクリーンリーダー(音声読み上げソフト)のためのようです．つまり画面上には必要ないものが見えていることになります． 原因bootstrapのバージョンが新しすぎるためです．bootstrap-vueではv4.5.3が推奨されていますが，Getting Startedの通りにnpm install bootstrapをするとsr-onlyが廃止されたv5をダウンロードしてきます．v4.5.3を指定してダウンロードすることで見えなくなります． リンクGetting Started | BootstrapVue - https://bootstrap-vue.org/docs Accessibility · Bootstrap v5.0 - https://getbootstrap.com/docs/5.0/getting-started/accessibility/ document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/2021/09/19/bootstrap-vue-version-4-5/"},{"title":"大学生のキャッシュレス環境2021","text":"2021年末の決済環境をメモしておきます． 大学生してます． 💳2021年末環境構成 JALカードnavi → TOYOTA Wallet(iD) (→ Suica) JALカードnavi → Revolut (Visa) (→ 各種コード決済) 還元率最小 2 %～最大 12-3 % (マイルの利用方法による) JALカードnaviは 1 % のマイル付与 TOYOTA Walletは 1 % のキャッシュバック Suica，Revolutは還元なし． コメントJALカードnaviはやはりお得です．1マイル2円相当の価値があるので実質2%還元くらいあります．2021年は伊丹花巻便を前日価格36000円のところ3000マイルで取れたので超満足です． また出口はSuicaの決済速度・利便性を取り，かつシンプルな構成に落ち着かせました． また，Revolutの使い捨てのカード番号が便利すぎて日本の小さな通販から，Aliexpressの1円商品，アメリカから自作キーボードのパーツ，ロシアからAndroidのROMを買ったりなど多様な決済をすることが出来ました． 環境変化JRE CARDの解約JRE CARDは券面こそかっこよかったもののWeb明細ポイント付与が2021年3月でなくなってしまい，関西在住の自分からすると年会費を回収できる術がなかったため解約しました． 脱Kyash最初は2%還元でリリースされたKyashは今やカード入金では0.2%還元． 脱Kyashの決め手となったのはJALカードがKyashへの入金をマイル付与対象外としたことです． でも気まぐれで300円が付与されるようなので解約せずおいておきます． Revolutへの統一Revolutが3Dセキュアに対応したことで各種コード決済サービスに登録できるようになりました．現状PayPay，楽天ペイ，d払いに設定しています． TOYOTA Wallet の導入以前から登録はしていたのですが，還元が美味しいという話を聞き7月頃から構成に組み込みました． 導入当初は1.5%還元だったのですが，2021年10月末で1%還元になってしまいました．それでも美味しいのでまだ使い続けています． 2022年に向けての期待Revolutメタルカード2021年末までにリリースが予定されていましたが年末になってもリリースされずでした．ソース 金属カードは所有欲が満たされそうなのでぜひとも欲しいところです． AppleCardでも良いです． 三井住友カード通常の三井住友カードがLINE Payにチャージ&amp;ペイで利用できるようになったり，SBI証券と提携して投資信託等でポイントが付与されるようになったり，南海電鉄と組んでキャンペーン実施などといろいろ仕掛けてくれました．2022年も期待しておきます． 2022年の環境変化も楽しみです．年末にこの記事を見て懐かしみたいと思います． document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/2022/01/09/cashless-deck-2021/"},{"title":"大学生のキャッシュレス環境2022","text":"2022年末の決済環境メモです．2021年版はこちら 💳2022年末環境支払いデッキ1JALカードnavi → Revolut (Visa) (→ Suica / 各種コード決済) デッキ還元率最小2%から最大12-3% (マイルの利用方法による) 内容はJALカードnaviの1%マイル付与，Revolutはメタルアカウントのため1%還元付与． マイルは3000マイルで特典航空券に交換でき，搭乗区間によって実質還元率が変わります． デッキの構築理由JALカードnaviはやはり学生旅行者必携でしょう．100円で1マイル貯まって，羽田↔伊丹便の特典航空券に交換すれば1マイル3-4円で利用できます．高い区間に適用すれば1マイル最大12-13円くらいで利用できるはずです． Revolutは年会費2万のメタルアカウントで利用しています． RevolutからSuicaやQR決済に流して利便性を向上させてもよいのですが，メタルカードを使いたくて仕方ないので物理カードで決済しています． 支払いデッキ2JQ CARD エポス デッキ還元率0.5% デッキの構築理由JQ CARD エポスゴールドカードへのインビテーションをもらうため． 去年比のデッキの変化Revolutメタル今年1月20日にRevolutのメタルアカウントが日本でサービス開始されました．公開後即入会し，人生初の金属カードを入手しました．信用がなくてもお金を払えば金属カードを手に入れられる点は良いですね． 店で出すと高級感があっていいですねってたまに言われます．(ちょっと恥ずかしい．過去2回言われました．) TOYOTA Walletの還元消滅 + デッキから削除常時2%還元だったTOYOTA Walletですが，2022年3月31日で還元が終了してしまいました．ソース これに伴いTOYOTA Walletを利用する理由がなくなったために支払いデッキからは消しました． JQ CARDエポスの導入2022年9月にカードを育てる楽しみを感じてみようとJQ CARDエポスを作成しました．年間50万円決済のペースで6ヵ月くらいすれば招待状が届くようなので楽しみに待っています． 2023年に向けての期待JQ CARDエポスゴールドへのインビテーションほしいです．現状2-3ヵ月で25万くらい決済しています． Revolutメタルのサービス拡張Revolutのメタルアカウントは年会費2万円もするのに得られる特典が”メタルカードホルダーになれる”，”1%の還元を得られる”程度しかない状況です． 正直払う価値がないと思っているので年間払いの契約が終わったらそのまま解約しようと思っています． ラウンジキーを条件なく使えるようにするとか，クーポンをもっと拡大するなどしていただけると良いですね． 2023年の環境変化も楽しみです．来年末にこの記事を見て懐かしみたいです． document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/2022/12/25/cashless-deck-2022/"},{"title":"にゃーん ~カンバセーショナルカードを使った定型ツイートの容易化~","text":"この記事は、Lava Bucket Advent Calendar 4日目の記事です。 やりたいこと 早く楽に簡単に「にゃーん」を呟きたい 定型文をいち早くツイートしたい (あらかじめ決まっている文章をいちいちツイート画面に打つのは面倒！) まず初めにTwitterにおける「にゃーん」を知らない人はこちらを読んでほしい。 きっかけ「にゃーん」な気持ちな時は「にゃーん」と打つことさえも億劫なのである。 それはそうと、Twitterを見ていると画像、動画、アプリ等様々なコンテンツがついた広告が流れてくる。 言語内容とも多様な広告が流れてくるわけだが、そこに1タップするだけで広告主が設定した文章が瞬時にツイート画面に埋められ簡単にツイートできるといった大変便利な機能を持った広告がある。 これを利用したら簡単に「にゃーん」できるのではないだろうか…？ 目標この機能を持ったツイートに手軽にアクセスできるようになれば、簡単に「にゃーん」をツイートできそうなのでそれを目指す。 TwitterではこのようなWebサイトに対してより多くの情報を持たせることのできるこの機能は「カード」と呼ばれている。 「カード」って何？Webサイトのリンクをツイートした時にツイート文の下にそのサイトに関する情報をより多く載せることができる機能。 一般的なWebサイトに採用されているカードは4種類あり、Summaryカード、大きな画像付きのSummaryカード、Appカード、Playerカードがある。今回紹介するカードは広告向けのカードであるため、一般的に利用されているものとは異なる。 広告向けの「カード」ってどんなものがあるの？種類が多くここでは全てを語ることはできないので、Twitter社の説明ページを読んでほしい。 business.twitter.com 見たことある広告形式が並んでいることだろう。今回気になった広告は「カンバセーショナルカード」というものらしい。 引用元: お問い合わせ内容の検索 (adsbygoogle = window.adsbygoogle || []).push({}); 実装しよう用意するもの Twitterアカウント (ボタンの上に載せるための) 画像 / 動画のどちらか クレジットカードクレジットカードだが、プリペイドのカードでもできる可能性がある。今回はLINE PAYカードを使用した。ただし後述の通り、100円以上の残高が必要と思われる。1円も使わないのでご安心を。 「カード」を設定するまず、 https://ads.twitter.com/ にアクセス。 「次に進む」をクリック。 右上の右から2つ目のドロップダウンをクリックし、「クレジットカードを追加する」をクリック。 適当な住所を入力し、クレジットカード情報を登録する。ここで「アカウントに資格がありません。」とか言われてたらちゃんとリンクの参加資格を読む。 ここでクレジットカードの有効性を確認されるためか、1度100円が決済されるが3分後くらいには100円が返還された。 正しく登録できたなら、https://ads.twitter.com/ に戻ると「クリエイティブ」というタブが追加されているはずである。 「クリエイティブ」をクリックし、ここで「カード」を選択。 「カードを作成」をクリックし、ここで「イメージカンバセーショナルカード」もしくは「ビデオカンバセーショナルカード」を選択。 もしここで選択肢に存在しない場合は、右上の「お問い合わせ」から適当なものを選んで適当な文章をTwitter社に送ると有効化してくれるはずである。 「カンバセーショナルカードを作成」が横から出てくるのでフォームを入力していく。一番下の「プレビュー」を押すことでどのように実装されるか確認できる。 メディア用意した素材をアップロードする ハッシュタグボタンの中に表示される文章である。(例: #○○○○ でツイート) ハッシュタグ1のツイートメッセージボタン押すと埋められるツイートの文字列 ヘッドラインカードの中の文章 お礼のテキストツイートした後にでてくるカードの中の文章 お礼のURLツイートした後そのカードがそのユーザーに対して押したときに飛ばされる先。 今回は画像にフリー素材写真ぱくたそ様の猫の寝顔写真をお借りさせてもらった。URLは “ https://twitter.com/intent/tweet?text=にゃーん “ と設定。 「作成」ボタンを押して完成。 完成したカードの上にカーソルを合わせると、目のアイコンが出てくるので「プレビュー」をクリック 一番下のリンクをコピー (横の絵文字を押せば勝手にコピーしてくれる) そのリンクをツイートすると以下のようにカードが埋め込まれた状態でツイートされる。 ボタンを利用して、ツイートすると以下のようになる。 もう一度カードを押すと… できた！カード付きのツイートを固定ツイートにしておけばいつでも「にゃーん」できる！ 完成したツイートがこちらhttps://t.co/pYwN6vVlhe— うにゃ (@unya_2) 2017年12月3日 環境によって文字化けしたり正しく表示されないが、twitter.com上、アプリ内だと動作する。 URLエンコードしたら直るかな？ Twitter Liteだと表示されなかったりなのでアプリで見てください。 一般的なカードと広告カードの違い 自分の管理下にないURLをリンクすることができる (カンバセーショナルカードならば)カードが他者にツイートされ拡散力がある カード専用のURLが生成される 動画を埋め込むことができる ads.twitter.comで直感的にカードを作ることができる おわり！ document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/2017/12/03/conversational-card/"},{"title":"絵文字辞書📚を導入して文章を彩る🌸","text":"絵文字があると文章が華やか✨になりますし，気持ちも晴れやかになります🤗 Apple🍎製品だと豊かな絵文字の変換が可能ですが，Windows 💠だと思うように変換してくれないので残念ですよね😿 もしかして辞書📚があるのではないかと思い探してみると🔍・・・ありました👀 GitHubhttps://github.com/peaceiris/emoji-ime-dictionarypeaceiris/emoji-ime-dictionary日本語で絵文字入力をするための IME 追加辞書 📙 Google 日本語入力などで日本語から絵文字への変換を可能にする IME 拡張辞書です - peaceiris/emoji-ime-dictionary 見た限り直近にも更新🆙されていて良さそうです👍 🛠 改造このままだと絵文字を使うには毎度コロン : を入力しなくてはいけません．私は文章入力をしながら自然に絵文字を利用したいのでこれを削っていきます． Gisthttps://gist.github.com/unyacat/aa2b9fc40d27a48ea2bcf8079cabe9cdv2.2.1 / MIT License: https://github.com/peaceiris/emoji-ime-dictionary/blob/main/LICENSEv2.2.1 / MIT License: https://github.com/peaceiris/emoji-ime-dictionary/blob/main/LICENSE - emoji_alt.txt 削りました．(Gist は v2.2.1 リリースのものです) Readme 📝に従って，無事に登録できました✨ では良い絵文字ライフを👋 [おまけ] Python で詰まったemoji.txt を改造するときに Python で行いました．ファイルに書き込むところを書くのはめんどうだったので標準出力に垂れ流してそれをファイルに書き込もうとしました． しかし…標準出力はできるのに出力先をファイルにしようとするとエラーを吐いてしまいました． 1234$ python main.py &gt;&gt; output.txt Traceback (most recent call last): ...(略)... UnicodeEncodeError: 'cp932' codec can't encode character '\\U0001f524' in position 4: illegal multibyte sequence 正解💡 123456import sys, iosys.stdout = io.TextIOWrapper(sys.stdout.buffer, encoding='utf-8')with open('./emoji/emoji.txt', encoding=\"utf-8\") as f: for line in f: print(line[1:], end='') document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/2020/12/09/emoji-dictionary/"},{"title":"推し水瀬いのり楽曲2021","text":"推しの水瀬いのり楽曲 2021． 楽曲派クリスタライズ スマートフォンゲーム「アークナイツ」のイメージソング 9thシングル「Starlight Musium」のカップリング曲なのですが，過去の楽曲にはない電子音の多用，それから得られる加速感が素晴らしいです．音ゲー・DJイベントが好きな人におすすめ． コロナ後発表楽曲で1年越しにHELLO HORIZONで初披露されました．今後とも聞きたいなぁ・・・． Future Seeker Tell Your Worldをはじめとする有名楽曲を楽曲を書いているkz氏が作曲しています．水瀬いのり氏とkz氏のコラボは僕的にとても興奮もの． 彼の楽曲がちょっとでも好きな人なら聞いただけでわかるほどkzしています． Loop Slider Cider詳細は下「隠れた曲」参照． ライブReady Steady Go! 動画のようにライブだとタオルを振り回したり，「Ready Steady Go!」と叫べるなど観客参加ができます． タオルは物販で買えばいいけど面倒なら適当なのでも持っていくべきです．． 大体毎回歌ってくれます．叫べるので助かってますが，発声禁止イベントまでこれ歌うのはずるいと思います． Million Futures 乖離性ミリオンアーサー 主題歌 サビ前の「乖離を抱いて～」の後の「み～りおんふゅ～ちゃ～！」を叫ぶなど観客参加ができる． これも大体歌ってくれる．かっこよくていいね． Starry Wish TV アニメ「ViVid Strike!」エンディングテーマ 水瀬いのりのデビュー曲ということでこちらも毎回歌っている． 害悪もできる(やめようね)( [*](https://www.youtube.com/watch?v=i3rVOBg2fTk) ) 隠れた曲Milky Star / Loop Slider Cider / (夏の約束)]YouTube 女性向けゲーム「√HAPPY+SUGAR=」のテーマ曲．公式HP(視聴できる)水瀬いのりがCDを出す前(夢のつぼみより前)に歌ってた楽曲．でもFCイベ - 町民集会で歌ったことがあります．未成年いのりん．あどけなさがありながら電子音系で好き．夏の約束は Starry Wish に入ってるからあるけどもこちらはサブスクにないのつらい． まっすぐに、トウメイに。 キリンレモンCMソングオタ芸がしたくなるようなリズムの楽曲．ライブの際にはキリンレモンを買っていこうね．あと SOYJOY． document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/2021/11/12/fav-inori-music-2021/"},{"title":"FDAで2日で最も多くの空港を訪れるルート[2021年03月27日まで]","text":"3月3日に発表されたFDA乗り放題プランを最大限活用すべく2日で最も多くの空港をたどるルートを探しました． 公式プレスリリース https://www.fujidream.co.jp/company/press/doc/210303_3.pdf 旅行代理店 https://fuji-dream.radokanko.com/quick-trip/flight_plan/FDAで行く！ こんな飛行機搭乗券あったら良かった！FDAで日本の風景に会いに行こう！ FlightPlan for Liberty｜ラド観光FDAで行く！ こんな飛行機搭乗券あったら良かった！FDAで日本の風景に会いに行こう！ FlightPlan for Liberty https://www.good-trip-ex.com/fda_flight-rally24/フライトラリー24｜FDA × GOOD TRIP EXPRESS&gt;フライトラリー24 1日8区間3日間で最大24区間乗り放題!!設定期間：3/19出発～4/24帰着まで 条件 2021年03月27日までの時刻表を利用する 乗り継ぎ時間最低 20 分 既に予定されている欠航を考慮しない 発着地は同じ 2日目まで 旅程最大は 9 空港．静岡，福岡，小牧発着可能．静岡は 5 ルート，福岡は 15 ルート，小牧は 22 ルートあります．保証はもちろんないです． 静岡発着 ルート1 便名 出発地 出発時間 到着地 到着時間 181 静岡 08:25 出雲 09:50 702 出雲 10:20 仙台 11:45 703 仙台 12:15 出雲 14:10 816 出雲 14:40 神戸 15:30 827 神戸 18:00 高知 18:45 348 高知 19:55 小牧 20:55 361 小牧 07:40 青森 09:00 362 青森 09:35 小牧 11:05 325 小牧 12:40 熊本 14:10 326 熊本 14:50 小牧 16:10 313 小牧 17:45 福岡 19:20 150 福岡 19:50 静岡 21:15 ルート2 便名 出発地 出発時間 到着地 到着時間 181 静岡 08:25 出雲 09:50 702 出雲 10:20 仙台 11:45 703 仙台 12:15 出雲 14:10 816 出雲 14:40 神戸 15:30 827 神戸 18:00 高知 18:45 348 高知 19:55 小牧 20:55 351 小牧 07:15 花巻 08:25 352 花巻 09:00 小牧 10:25 325 小牧 12:40 熊本 14:10 326 熊本 14:50 小牧 16:10 313 小牧 17:45 福岡 19:20 150 福岡 19:50 静岡 21:15 ルート3 便名 出発地 出発時間 到着地 到着時間 181 静岡 08:25 出雲 09:50 702 出雲 10:20 仙台 11:45 703 仙台 12:15 出雲 14:10 816 出雲 14:40 神戸 15:30 827 神戸 18:00 高知 18:45 348 高知 19:55 小牧 20:55 381 小牧 09:10 山形 10:15 382 山形 10:55 小牧 12:10 325 小牧 12:40 熊本 14:10 326 熊本 14:50 小牧 16:10 313 小牧 17:45 福岡 19:20 150 福岡 19:50 静岡 21:15 ルート4 便名 出発地 出発時間 到着地 到着時間 141 静岡 07:35 福岡 09:30 202 福岡 10:45 松本 12:10 205 松本 12:45 福岡 14:35 308 福岡 15:55 小牧 17:15 327 小牧 17:55 熊本 19:25 328 熊本 20:05 小牧 21:25 341 小牧 07:25 高知 08:30 342 高知 09:00 小牧 10:00 363 小牧 10:30 青森 11:50 834 青森 12:25 神戸 14:15 817 神戸 16:00 出雲 16:55 188 出雲 17:25 静岡 18:35 ルート5 便名 出発地 出発時間 到着地 到着時間 141 静岡 07:35 福岡 09:30 302 福岡 10:00 小牧 11:20 325 小牧 12:40 熊本 14:10 326 熊本 14:50 小牧 16:10 357 小牧 16:55 花巻 18:05 358 花巻 18:40 小牧 20:05 341 小牧 07:25 高知 08:30 342 高知 09:00 小牧 10:00 363 小牧 10:30 青森 11:50 834 青森 12:25 神戸 14:15 817 神戸 16:00 出雲 16:55 188 出雲 17:25 静岡 18:35 福岡発着 ルート1 便名 出発地 出発時間 到着地 到着時間 200 福岡 07:50 松本 09:15 233 松本 09:50 神戸 10:55 833 神戸 11:45 青森 13:20 364 青森 14:00 小牧 15:30 357 小牧 16:55 花巻 18:05 358 花巻 18:40 小牧 20:05 381 小牧 09:10 山形 10:15 382 山形 10:55 小牧 12:10 325 小牧 12:40 熊本 14:10 326 熊本 14:50 小牧 16:10 417 小牧 16:35 出雲 17:40 418 出雲 18:10 小牧 19:05 315 小牧 19:55 福岡 21:30 ルート2 便名 出発地 出発時間 到着地 到着時間 200 福岡 07:50 松本 09:15 233 松本 09:50 神戸 10:55 833 神戸 11:45 青森 13:20 364 青森 14:00 小牧 15:30 357 小牧 16:55 花巻 18:05 358 花巻 18:40 小牧 20:05 411 小牧 07:50 出雲 08:55 412 出雲 09:25 小牧 10:20 383 小牧 11:40 山形 12:45 602 山形 13:20 新千歳 14:35 603 新千歳 15:10 山形 16:30 386 山形 17:05 小牧 18:20 315 小牧 19:55 福岡 21:30 ルート3 便名 出発地 出発時間 到着地 到着時間 200 福岡 07:50 松本 09:15 233 松本 09:50 神戸 10:55 833 神戸 11:45 青森 13:20 364 青森 14:00 小牧 15:30 357 小牧 16:55 花巻 18:05 358 花巻 18:40 小牧 20:05 341 小牧 07:25 高知 08:30 342 高知 09:00 小牧 10:00 383 小牧 11:40 山形 12:45 602 山形 13:20 新千歳 14:35 603 新千歳 15:10 山形 16:30 386 山形 17:05 小牧 18:20 315 小牧 19:55 福岡 21:30 ルート4 便名 出発地 出発時間 到着地 到着時間 200 福岡 07:50 松本 09:15 233 松本 09:50 神戸 10:55 833 神戸 11:45 青森 13:20 364 青森 14:00 小牧 15:30 357 小牧 16:55 花巻 18:05 358 花巻 18:40 小牧 20:05 341 小牧 07:25 高知 08:30 342 高知 09:00 小牧 10:00 325 小牧 12:40 熊本 14:10 326 熊本 14:50 小牧 16:10 417 小牧 16:35 出雲 17:40 418 出雲 18:10 小牧 19:05 315 小牧 19:55 福岡 21:30 ルート5 便名 出発地 出発時間 到着地 到着時間 200 福岡 07:50 松本 09:15 233 松本 09:50 神戸 10:55 833 神戸 11:45 青森 13:20 364 青森 14:00 小牧 15:30 357 小牧 16:55 花巻 18:05 358 花巻 18:40 小牧 20:05 321 小牧 08:05 熊本 09:35 322 熊本 10:15 小牧 11:35 345 小牧 12:05 高知 13:10 346 高知 13:40 小牧 14:40 417 小牧 16:35 出雲 17:40 418 出雲 18:10 小牧 19:05 315 小牧 19:55 福岡 21:30 ルート6 便名 出発地 出発時間 到着地 到着時間 200 福岡 07:50 松本 09:15 233 松本 09:50 神戸 10:55 833 神戸 11:45 青森 13:20 364 青森 14:00 小牧 15:30 347 小牧 18:20 高知 19:25 348 高知 19:55 小牧 20:55 351 小牧 07:15 花巻 08:25 352 花巻 09:00 小牧 10:25 383 小牧 11:40 山形 12:45 602 山形 13:20 新千歳 14:35 603 新千歳 15:10 山形 16:30 386 山形 17:05 小牧 18:20 315 小牧 19:55 福岡 21:30 ルート8 便名 出発地 出発時間 到着地 到着時間 200 福岡 07:50 松本 09:15 233 松本 09:50 神戸 10:55 833 神戸 11:45 青森 13:20 364 青森 14:00 小牧 15:30 347 小牧 18:20 高知 19:25 348 高知 19:55 小牧 20:55 351 小牧 07:15 花巻 08:25 352 花巻 09:00 小牧 10:25 325 小牧 12:40 熊本 14:10 326 熊本 14:50 小牧 16:10 417 小牧 16:35 出雲 17:40 418 出雲 18:10 小牧 19:05 315 小牧 19:55 福岡 21:30 ルート9 便名 出発地 出発時間 到着地 到着時間 200 福岡 07:50 松本 09:15 233 松本 09:50 神戸 10:55 833 神戸 11:45 青森 13:20 364 青森 14:00 小牧 15:30 347 小牧 18:20 高知 19:25 348 高知 19:55 小牧 20:55 381 小牧 09:10 山形 10:15 382 山形 10:55 小牧 12:10 325 小牧 12:40 熊本 14:10 326 熊本 14:50 小牧 16:10 417 小牧 16:35 出雲 17:40 418 出雲 18:10 小牧 19:05 315 小牧 19:55 福岡 21:30 ルート10 便名 出発地 出発時間 到着地 到着時間 200 福岡 07:50 松本 09:15 233 松本 09:50 神戸 10:55 833 神戸 11:45 青森 13:20 364 青森 14:00 小牧 15:30 347 小牧 18:20 高知 19:25 348 高知 19:55 小牧 20:55 411 小牧 07:50 出雲 08:55 412 出雲 09:25 小牧 10:20 383 小牧 11:40 山形 12:45 602 山形 13:20 新千歳 14:35 603 新千歳 15:10 山形 16:30 386 山形 17:05 小牧 18:20 315 小牧 19:55 福岡 21:30 ルート11 便名 出発地 出発時間 到着地 到着時間 200 福岡 07:50 松本 09:15 233 松本 09:50 神戸 10:55 833 神戸 11:45 青森 13:20 364 青森 14:00 小牧 15:30 327 小牧 17:55 熊本 19:25 328 熊本 20:05 小牧 21:25 351 小牧 07:15 花巻 08:25 352 花巻 09:00 小牧 10:25 383 小牧 11:40 山形 12:45 602 山形 13:20 新千歳 14:35 603 新千歳 15:10 山形 16:30 386 山形 17:05 小牧 18:20 315 小牧 19:55 福岡 21:30 ルート12 便名 出発地 出発時間 到着地 到着時間 200 福岡 07:50 松本 09:15 233 松本 09:50 神戸 10:55 833 神戸 11:45 青森 13:20 364 青森 14:00 小牧 15:30 327 小牧 17:55 熊本 19:25 328 熊本 20:05 小牧 21:25 351 小牧 07:15 花巻 08:25 352 花巻 09:00 小牧 10:25 345 小牧 12:05 高知 13:10 346 高知 13:40 小牧 14:40 417 小牧 16:35 出雲 17:40 418 出雲 18:10 小牧 19:05 315 小牧 19:55 福岡 21:30 ルート13 便名 出発地 出発時間 到着地 到着時間 200 福岡 07:50 松本 09:15 233 松本 09:50 神戸 10:55 833 神戸 11:45 青森 13:20 364 青森 14:00 小牧 15:30 327 小牧 17:55 熊本 19:25 328 熊本 20:05 小牧 21:25 411 小牧 07:50 出雲 08:55 412 出雲 09:25 小牧 10:20 383 小牧 11:40 山形 12:45 602 山形 13:20 新千歳 14:35 603 新千歳 15:10 山形 16:30 386 山形 17:05 小牧 18:20 315 小牧 19:55 福岡 21:30 ルート14 便名 出発地 出発時間 到着地 到着時間 200 福岡 07:50 松本 09:15 233 松本 09:50 神戸 10:55 833 神戸 11:45 青森 13:20 364 青森 14:00 小牧 15:30 327 小牧 17:55 熊本 19:25 328 熊本 20:05 小牧 21:25 341 小牧 07:25 高知 08:30 342 高知 09:00 小牧 10:00 353 小牧 10:50 花巻 12:00 354 花巻 12:35 小牧 14:00 417 小牧 16:35 出雲 17:40 418 出雲 18:10 小牧 19:05 315 小牧 19:55 福岡 21:30 ルート15 便名 出発地 出発時間 到着地 到着時間 200 福岡 07:50 松本 09:15 233 松本 09:50 神戸 10:55 833 神戸 11:45 青森 13:20 364 青森 14:00 小牧 15:30 327 小牧 17:55 熊本 19:25 328 熊本 20:05 小牧 21:25 341 小牧 07:25 高知 08:30 342 高知 09:00 小牧 10:00 383 小牧 11:40 山形 12:45 602 山形 13:20 新千歳 14:35 603 新千歳 15:10 山形 16:30 386 山形 17:05 小牧 18:20 315 小牧 19:55 福岡 21:30 小牧発着 ルート1 便名 出発地 出発時間 到着地 到着時間 361 小牧 07:40 青森 09:00 362 青森 09:35 小牧 11:05 325 小牧 12:40 熊本 14:10 326 熊本 14:50 小牧 16:10 313 小牧 17:45 福岡 19:20 150 福岡 19:50 静岡 21:15 181 静岡 08:25 出雲 09:50 702 出雲 10:20 仙台 11:45 703 仙台 12:15 出雲 14:10 816 出雲 14:40 神戸 15:30 827 神戸 18:00 高知 18:45 348 高知 19:55 小牧 20:55 ルート2 便名 出発地 出発時間 到着地 到着時間 351 小牧 07:15 花巻 08:25 352 花巻 09:00 小牧 10:25 383 小牧 11:40 山形 12:45 602 山形 13:20 新千歳 14:35 603 新千歳 15:10 山形 16:30 386 山形 17:05 小牧 18:20 315 小牧 19:55 福岡 21:30 200 福岡 07:50 松本 09:15 233 松本 09:50 神戸 10:55 833 神戸 11:45 青森 13:20 364 青森 14:00 小牧 15:30 417 小牧 16:35 出雲 17:40 418 出雲 18:10 小牧 19:05 ルート3 便名 出発地 出発時間 到着地 到着時間 351 小牧 07:15 花巻 08:25 352 花巻 09:00 小牧 10:25 383 小牧 11:40 山形 12:45 602 山形 13:20 新千歳 14:35 603 新千歳 15:10 山形 16:30 386 山形 17:05 小牧 18:20 315 小牧 19:55 福岡 21:30 200 福岡 07:50 松本 09:15 233 松本 09:50 神戸 10:55 833 神戸 11:45 青森 13:20 364 青森 14:00 小牧 15:30 347 小牧 18:20 高知 19:25 348 高知 19:55 小牧 20:55 ルート4 便名 出発地 出発時間 到着地 到着時間 351 小牧 07:15 花巻 08:25 352 花巻 09:00 小牧 10:25 383 小牧 11:40 山形 12:45 602 山形 13:20 新千歳 14:35 603 新千歳 15:10 山形 16:30 386 山形 17:05 小牧 18:20 315 小牧 19:55 福岡 21:30 200 福岡 07:50 松本 09:15 233 松本 09:50 神戸 10:55 833 神戸 11:45 青森 13:20 364 青森 14:00 小牧 15:30 327 小牧 17:55 熊本 19:25 328 熊本 20:05 小牧 21:25 ルート5 便名 出発地 出発時間 到着地 到着時間 351 小牧 07:15 花巻 08:25 352 花巻 09:00 小牧 10:25 345 小牧 12:05 高知 13:10 346 高知 13:40 小牧 14:40 417 小牧 16:35 出雲 17:40 418 出雲 18:10 小牧 19:05 315 小牧 19:55 福岡 21:30 200 福岡 07:50 松本 09:15 233 松本 09:50 神戸 10:55 833 神戸 11:45 青森 13:20 364 青森 14:00 小牧 15:30 327 小牧 17:55 熊本 19:25 328 熊本 20:05 小牧 21:25 ルート6 便名 出発地 出発時間 到着地 到着時間 351 小牧 07:15 花巻 08:25 352 花巻 09:00 小牧 10:25 325 小牧 12:40 熊本 14:10 326 熊本 14:50 小牧 16:10 417 小牧 16:35 出雲 17:40 418 出雲 18:10 小牧 19:05 315 小牧 19:55 福岡 21:30 200 福岡 07:50 松本 09:15 233 松本 09:50 神戸 10:55 833 神戸 11:45 青森 13:20 364 青森 14:00 小牧 15:30 347 小牧 18:20 高知 19:25 348 高知 19:55 小牧 20:55 ルート7 便名 出発地 出発時間 到着地 到着時間 351 小牧 07:15 花巻 08:25 352 花巻 09:00 小牧 10:25 325 小牧 12:40 熊本 14:10 326 熊本 14:50 小牧 16:10 313 小牧 17:45 福岡 19:20 150 福岡 19:50 静岡 21:15 181 静岡 08:25 出雲 09:50 702 出雲 10:20 仙台 11:45 703 仙台 12:15 出雲 14:10 816 出雲 14:40 神戸 15:30 827 神戸 18:00 高知 18:45 348 高知 19:55 小牧 20:55 ルート8 便名 出発地 出発時間 到着地 到着時間 381 小牧 09:10 山形 10:15 382 山形 10:55 小牧 12:10 325 小牧 12:40 熊本 14:10 326 熊本 14:50 小牧 16:10 417 小牧 16:35 出雲 17:40 418 出雲 18:10 小牧 19:05 315 小牧 19:55 福岡 21:30 200 福岡 07:50 松本 09:15 233 松本 09:50 神戸 10:55 833 神戸 11:45 青森 13:20 364 青森 14:00 小牧 15:30 357 小牧 16:55 花巻 18:05 358 花巻 18:40 小牧 20:05 ルート9 便名 出発地 出発時間 到着地 到着時間 381 小牧 09:10 山形 10:15 382 山形 10:55 小牧 12:10 325 小牧 12:40 熊本 14:10 326 熊本 14:50 小牧 16:10 417 小牧 16:35 出雲 17:40 418 出雲 18:10 小牧 19:05 315 小牧 19:55 福岡 21:30 200 福岡 07:50 松本 09:15 233 松本 09:50 神戸 10:55 833 神戸 11:45 青森 13:20 364 青森 14:00 小牧 15:30 347 小牧 18:20 高知 19:25 348 高知 19:55 小牧 20:55 ルート10 便名 出発地 出発時間 到着地 到着時間 381 小牧 09:10 山形 10:15 382 山形 10:55 小牧 12:10 325 小牧 12:40 熊本 14:10 326 熊本 14:50 小牧 16:10 313 小牧 17:45 福岡 19:20 150 福岡 19:50 静岡 21:15 181 静岡 08:25 出雲 09:50 702 出雲 10:20 仙台 11:45 703 仙台 12:15 出雲 14:10 816 出雲 14:40 神戸 15:30 827 神戸 18:00 高知 18:45 348 高知 19:55 小牧 20:55 ルート11 便名 出発地 出発時間 到着地 到着時間 411 小牧 07:50 出雲 08:55 412 出雲 09:25 小牧 10:20 383 小牧 11:40 山形 12:45 602 山形 13:20 新千歳 14:35 603 新千歳 15:10 山形 16:30 386 山形 17:05 小牧 18:20 315 小牧 19:55 福岡 21:30 200 福岡 07:50 松本 09:15 233 松本 09:50 神戸 10:55 833 神戸 11:45 青森 13:20 364 青森 14:00 小牧 15:30 357 小牧 16:55 花巻 18:05 358 花巻 18:40 小牧 20:05 ルート12 便名 出発地 出発時間 到着地 到着時間 411 小牧 07:50 出雲 08:55 412 出雲 09:25 小牧 10:20 383 小牧 11:40 山形 12:45 602 山形 13:20 新千歳 14:35 603 新千歳 15:10 山形 16:30 386 山形 17:05 小牧 18:20 315 小牧 19:55 福岡 21:30 200 福岡 07:50 松本 09:15 233 松本 09:50 神戸 10:55 833 神戸 11:45 青森 13:20 364 青森 14:00 小牧 15:30 347 小牧 18:20 高知 19:25 348 高知 19:55 小牧 20:55 ルート13 便名 出発地 出発時間 到着地 到着時間 411 小牧 07:50 出雲 08:55 412 出雲 09:25 小牧 10:20 383 小牧 11:40 山形 12:45 602 山形 13:20 新千歳 14:35 603 新千歳 15:10 山形 16:30 386 山形 17:05 小牧 18:20 315 小牧 19:55 福岡 21:30 200 福岡 07:50 松本 09:15 233 松本 09:50 神戸 10:55 833 神戸 11:45 青森 13:20 364 青森 14:00 小牧 15:30 327 小牧 17:55 熊本 19:25 328 熊本 20:05 小牧 21:25 ルート14 便名 出発地 出発時間 到着地 到着時間 341 小牧 07:25 高知 08:30 342 高知 09:00 小牧 10:00 363 小牧 10:30 青森 11:50 834 青森 12:25 神戸 14:15 817 神戸 16:00 出雲 16:55 188 出雲 17:25 静岡 18:35 141 静岡 07:35 福岡 09:30 202 福岡 10:45 松本 12:10 205 松本 12:45 福岡 14:35 308 福岡 15:55 小牧 17:15 327 小牧 17:55 熊本 19:25 328 熊本 20:05 小牧 21:25 ルート15 便名 出発地 出発時間 到着地 到着時間 341 小牧 07:25 高知 08:30 342 高知 09:00 小牧 10:00 363 小牧 10:30 青森 11:50 834 青森 12:25 神戸 14:15 817 神戸 16:00 出雲 16:55 188 出雲 17:25 静岡 18:35 141 静岡 07:35 福岡 09:30 302 福岡 10:00 小牧 11:20 325 小牧 12:40 熊本 14:10 326 熊本 14:50 小牧 16:10 357 小牧 16:55 花巻 18:05 358 花巻 18:40 小牧 20:05 ルート16 便名 出発地 出発時間 到着地 到着時間 341 小牧 07:25 高知 08:30 342 高知 09:00 小牧 10:00 363 小牧 10:30 青森 11:50 834 青森 12:25 神戸 14:15 817 神戸 16:00 出雲 16:55 418 出雲 18:10 小牧 19:05 315 小牧 19:55 福岡 21:30 200 福岡 07:50 松本 09:15 211 松本 11:35 新千歳 13:10 603 新千歳 15:10 山形 16:30 386 山形 17:05 小牧 18:20 ルート17 便名 出発地 出発時間 到着地 到着時間 341 小牧 07:25 高知 08:30 342 高知 09:00 小牧 10:00 353 小牧 10:50 花巻 12:00 354 花巻 12:35 小牧 14:00 417 小牧 16:35 出雲 17:40 418 出雲 18:10 小牧 19:05 315 小牧 19:55 福岡 21:30 200 福岡 07:50 松本 09:15 233 松本 09:50 神戸 10:55 833 神戸 11:45 青森 13:20 364 青森 14:00 小牧 15:30 327 小牧 17:55 熊本 19:25 328 熊本 20:05 小牧 21:25 ルート18 便名 出発地 出発時間 到着地 到着時間 341 小牧 07:25 高知 08:30 342 高知 09:00 小牧 10:00 383 小牧 11:40 山形 12:45 602 山形 13:20 新千歳 14:35 603 新千歳 15:10 山形 16:30 386 山形 17:05 小牧 18:20 315 小牧 19:55 福岡 21:30 200 福岡 07:50 松本 09:15 233 松本 09:50 神戸 10:55 833 神戸 11:45 青森 13:20 364 青森 14:00 小牧 15:30 357 小牧 16:55 花巻 18:05 358 花巻 18:40 小牧 20:05 ルート19 便名 出発地 出発時間 到着地 到着時間 341 小牧 07:25 高知 08:30 342 高知 09:00 小牧 10:00 383 小牧 11:40 山形 12:45 602 山形 13:20 新千歳 14:35 603 新千歳 15:10 山形 16:30 386 山形 17:05 小牧 18:20 315 小牧 19:55 福岡 21:30 200 福岡 07:50 松本 09:15 233 松本 09:50 神戸 10:55 833 神戸 11:45 青森 13:20 364 青森 14:00 小牧 15:30 417 小牧 16:35 出雲 17:40 418 出雲 18:10 小牧 19:05 ルート20 便名 出発地 出発時間 到着地 到着時間 341 小牧 07:25 高知 08:30 342 高知 09:00 小牧 10:00 383 小牧 11:40 山形 12:45 602 山形 13:20 新千歳 14:35 603 新千歳 15:10 山形 16:30 386 山形 17:05 小牧 18:20 315 小牧 19:55 福岡 21:30 200 福岡 07:50 松本 09:15 233 松本 09:50 神戸 10:55 833 神戸 11:45 青森 13:20 364 青森 14:00 小牧 15:30 327 小牧 17:55 熊本 19:25 328 熊本 20:05 小牧 21:25 ルート21 便名 出発地 出発時間 到着地 到着時間 341 小牧 07:25 高知 08:30 342 高知 09:00 小牧 10:00 325 小牧 12:40 熊本 14:10 326 熊本 14:50 小牧 16:10 417 小牧 16:35 出雲 17:40 418 出雲 18:10 小牧 19:05 315 小牧 19:55 福岡 21:30 200 福岡 07:50 松本 09:15 233 松本 09:50 神戸 10:55 833 神戸 11:45 青森 13:20 364 青森 14:00 小牧 15:30 357 小牧 16:55 花巻 18:05 358 花巻 18:40 小牧 20:05 ルート22 便名 出発地 出発時間 到着地 到着時間 321 小牧 08:05 熊本 09:35 322 熊本 10:15 小牧 11:35 345 小牧 12:05 高知 13:10 346 高知 13:40 小牧 14:40 417 小牧 16:35 出雲 17:40 418 出雲 18:10 小牧 19:05 315 小牧 19:55 福岡 21:30 200 福岡 07:50 松本 09:15 233 松本 09:50 神戸 10:55 833 神戸 11:45 青森 13:20 364 青森 14:00 小牧 15:30 357 小牧 16:55 花巻 18:05 358 花巻 18:40 小牧 20:05 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/2021/03/04/fda-8-flight-201025-210327-more-airports/"},{"title":"FDAに1日で8区間乗るルート一覧[2021年03月27日まで]","text":"3月3日に発表されたFDA乗り放題プランを最大限活用すべく1日で8区間乗るルートを探しました． 公式プレスリリース https://www.fujidream.co.jp/company/press/doc/210303_3.pdf 旅行代理店 https://fuji-dream.radokanko.com/quick-trip/flight_plan/FDAで行く！ こんな飛行機搭乗券あったら良かった！FDAで日本の風景に会いに行こう！ FlightPlan for Liberty｜ラド観光FDAで行く！ こんな飛行機搭乗券あったら良かった！FDAで日本の風景に会いに行こう！ FlightPlan for Liberty https://www.good-trip-ex.com/fda_flight-rally24/フライトラリー24｜FDA × GOOD TRIP EXPRESS&gt;フライトラリー24 1日8区間3日間で最大24区間乗り放題!!設定期間：3/19出発～4/24帰着まで 条件 2021年03月27日までの時刻表を利用する 乗り継ぎ時間最低 20 分 既に予定されている欠航を考慮しない 2日目 / 3日目を考慮しない 旅程名古屋(小牧)発 ルート1 便名 出発地 出発時間 到着地 到着時間 351 小牧 7:15 花巻 8:25 352 花巻 9:00 小牧 10:25 353 小牧 10:50 花巻 12:00 354 花巻 12:35 小牧 14:00 355 小牧 14:35 花巻 15:45 356 花巻 16:20 小牧 17:45 347 小牧 18:20 高知 19:25 348 高知 19:55 小牧 20:55 ルート2 便名 出発地 出発時間 到着地 到着時間 411 小牧 7:50 出雲 8:55 412 出雲 9:25 小牧 10:20 353 小牧 10:50 花巻 12:00 354 花巻 12:35 小牧 14:00 355 小牧 14:35 花巻 15:45 356 花巻 16:20 小牧 17:45 347 小牧 18:20 高知 19:25 348 高知 19:55 小牧 20:55 ルート3 便名 出発地 出発時間 到着地 到着時間 341 小牧 7:25 高知 8:30 342 高知 9:00 小牧 10:00 353 小牧 10:50 花巻 12:00 354 花巻 12:35 小牧 14:00 355 小牧 14:35 花巻 15:45 356 花巻 16:20 小牧 17:45 347 小牧 18:20 高知 19:25 348 高知 19:55 小牧 20:55 神戸発 便名 出発地 出発時間 到着地 到着時間 821 神戸 7:25 高知 8:10 342 高知 9:00 小牧 10:00 353 小牧 10:50 花巻 12:00 354 花巻 12:35 小牧 14:00 355 小牧 14:35 花巻 15:45 356 花巻 16:20 小牧 17:45 347 小牧 18:20 高知 19:25 348 高知 19:55 小牧 20:55 該当なし新千歳発，青森発，仙台発，花巻発，新潟発，静岡発，高知発，福岡発，出雲発，北九州発，熊本発，鹿児島発 利用したコード / 時刻表123456789101112131415161718192021import pandas as pdfrom datetime import timedeltatimetable = pd.read_csv(\"./fda_timetable_201025_210327.csv\", encoding=\"utf-8\")def search_flight(dep_id, dest_time, flights, n): next_flight_tf = (timetable['dep_id'] == dep_id) &amp; ((pd.to_datetime(timetable['dep_time']) - timedelta(minutes=20)) &gt; dest_time) if not sum(next_flight_tf) and n == 8: print(\"|便名|出発地|出発時間|到着地|到着時間|\") print(\"| :----: | :----: | :---: | :---: | :---: |\") for f in flights: print(\"|\" + \"|\".join(f) + \"|\") print(\"-----終了-----\") else: for _, flight in timetable[next_flight_tf].iterrows(): fli = flights[:] fli.append([str(flight[\"flight_no\"]), flight[\"dep_name\"], flight[\"dep_time\"], flight[\"dest_name\"], flight[\"dest_time\"]]) search_flight(flight[\"dest_id\"], flight[\"dest_time\"], fli, n+1)search_flight(\"NKM\", \"00:00\", [], 0) Gisthttps://gist.github.com/unyacat/918223397af569567b73f37e6a9300a42020年10月25日から2021年3月27日までのFDA時刻表．急いで作ったので間違いの可能性あり．予定されている欠航を考慮していない． document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/2021/03/03/fda-8-flight-201025-210327/"},{"title":"FDAに1日で8区間乗るルート一覧[2021年03月28日から2021年10月30日まで]","text":"3月3日に発表されたFDA乗り放題プランを最大限活用すべく1日で8区間乗るルートを探しました． 公式プレスリリース https://www.fujidream.co.jp/company/press/doc/210303_3.pdf 旅行代理店 https://fuji-dream.radokanko.com/quick-trip/flight_plan/FDAで行く！ こんな飛行機搭乗券あったら良かった！FDAで日本の風景に会いに行こう！ FlightPlan for Liberty｜ラド観光FDAで行く！ こんな飛行機搭乗券あったら良かった！FDAで日本の風景に会いに行こう！ FlightPlan for Liberty https://www.good-trip-ex.com/fda_flight-rally24/フライトラリー24｜FDA × GOOD TRIP EXPRESS&gt;フライトラリー24 1日8区間3日間で最大24区間乗り放題!!設定期間：3/19出発～4/24帰着まで 条件 2021年03月28日から2021年10月30日までの時刻表を利用する 乗り継ぎ時間最低 20 分 既に予定されている欠航を考慮しない 2日目 / 3日目を考慮しない 情報は正しいかどうか保証はいたしかねます．(特に時刻表が怪しい) 旅程名古屋(小牧)発全部で 58 ルートあります．どのルートでも無駄は多い． ルート1 便名 出発地 出発時間 到着地 到着時間 361 小牧 7:35 青森 8:55 362 青森 9:25 小牧 10:50 345 小牧 11:55 高知 12:55 824 高知 13:25 神戸 14:10 825 神戸 14:45 高知 15:30 346 高知 16:00 小牧 17:00 367 小牧 17:30 青森 18:50 368 青森 19:20 小牧 20:45 ルート2 便名 出発地 出発時間 到着地 到着時間 361 小牧 7:35 青森 8:55 362 青森 9:25 小牧 10:50 345 小牧 11:55 高知 12:55 824 高知 13:25 神戸 14:10 825 神戸 14:45 高知 15:30 346 高知 16:00 小牧 17:00 347 小牧 18:25 高知 19:25 348 高知 19:55 小牧 20:55 ルート3 便名 出発地 出発時間 到着地 到着時間 361 小牧 7:35 青森 8:55 362 青森 9:25 小牧 10:50 345 小牧 11:55 高知 12:55 824 高知 13:25 神戸 14:10 825 神戸 14:45 高知 15:30 346 高知 16:00 小牧 17:00 313 小牧 17:55 福岡 19:20 150 福岡 20:00 静岡 21:25 ルート4 便名 出発地 出発時間 到着地 到着時間 361 小牧 7:35 青森 8:55 362 青森 9:25 小牧 10:50 345 小牧 11:55 高知 12:55 824 高知 13:25 神戸 14:10 825 神戸 14:45 高知 15:30 346 高知 16:00 小牧 17:00 313 小牧 17:55 福岡 19:20 314 福岡 20:05 小牧 21:25 ルート5 便名 出発地 出発時間 到着地 到着時間 361 小牧 7:35 青森 8:55 362 青森 9:25 小牧 10:50 345 小牧 11:55 高知 12:55 824 高知 13:25 神戸 14:10 825 神戸 14:45 高知 15:30 346 高知 16:00 小牧 17:00 327 小牧 18:05 熊本 19:30 328 熊本 20:10 小牧 21:30 ルート6 便名 出発地 出発時間 到着地 到着時間 351 小牧 7:10 花巻 8:20 352 花巻 8:50 小牧 10:05 353 小牧 10:35 花巻 11:45 354 花巻 12:15 小牧 13:30 365 小牧 14:10 青森 15:30 366 青森 16:00 小牧 17:25 347 小牧 18:25 高知 19:25 348 高知 19:55 小牧 20:55 ルート7 便名 出発地 出発時間 到着地 到着時間 351 小牧 7:10 花巻 8:20 352 花巻 8:50 小牧 10:05 353 小牧 10:35 花巻 11:45 354 花巻 12:15 小牧 13:30 365 小牧 14:10 青森 15:30 366 青森 16:00 小牧 17:25 313 小牧 17:55 福岡 19:20 150 福岡 20:00 静岡 21:25 ルート8 便名 出発地 出発時間 到着地 到着時間 351 小牧 7:10 花巻 8:20 352 花巻 8:50 小牧 10:05 353 小牧 10:35 花巻 11:45 354 花巻 12:15 小牧 13:30 365 小牧 14:10 青森 15:30 366 青森 16:00 小牧 17:25 313 小牧 17:55 福岡 19:20 314 福岡 20:05 小牧 21:25 ルート9 便名 出発地 出発時間 到着地 到着時間 351 小牧 7:10 花巻 8:20 352 花巻 8:50 小牧 10:05 353 小牧 10:35 花巻 11:45 354 花巻 12:15 小牧 13:30 365 小牧 14:10 青森 15:30 366 青森 16:00 小牧 17:25 327 小牧 18:05 熊本 19:30 328 熊本 20:10 小牧 21:30 ルート10 便名 出発地 出発時間 到着地 到着時間 351 小牧 7:10 花巻 8:20 352 花巻 8:50 小牧 10:05 383 小牧 11:05 山形 12:10 602 山形 12:40 新千歳 14:00 603 新千歳 14:35 山形 15:50 386 山形 16:20 小牧 17:30 347 小牧 18:25 高知 19:25 348 高知 19:55 小牧 20:55 ルート11 便名 出発地 出発時間 到着地 到着時間 351 小牧 7:10 花巻 8:20 352 花巻 8:50 小牧 10:05 383 小牧 11:05 山形 12:10 602 山形 12:40 新千歳 14:00 603 新千歳 14:35 山形 15:50 386 山形 16:20 小牧 17:30 313 小牧 17:55 福岡 19:20 150 福岡 20:00 静岡 21:25 ルート12 便名 出発地 出発時間 到着地 到着時間 351 小牧 7:10 花巻 8:20 352 花巻 8:50 小牧 10:05 383 小牧 11:05 山形 12:10 602 山形 12:40 新千歳 14:00 603 新千歳 14:35 山形 15:50 386 山形 16:20 小牧 17:30 313 小牧 17:55 福岡 19:20 314 福岡 20:05 小牧 21:25 ルート13 便名 出発地 出発時間 到着地 到着時間 351 小牧 7:10 花巻 8:20 352 花巻 8:50 小牧 10:05 383 小牧 11:05 山形 12:10 602 山形 12:40 新千歳 14:00 603 新千歳 14:35 山形 15:50 386 山形 16:20 小牧 17:30 327 小牧 18:05 熊本 19:30 328 熊本 20:10 小牧 21:30 ルート14 便名 出発地 出発時間 到着地 到着時間 351 小牧 7:10 花巻 8:20 352 花巻 8:50 小牧 10:05 373 小牧 10:45 新潟 11:40 504 新潟 12:10 福岡 14:05 505 福岡 14:40 新潟 16:20 374 新潟 16:50 小牧 17:50 347 小牧 18:25 高知 19:25 348 高知 19:55 小牧 20:55 ルート15 便名 出発地 出発時間 到着地 到着時間 351 小牧 7:10 花巻 8:20 352 花巻 8:50 小牧 10:05 345 小牧 11:55 高知 12:55 824 高知 13:25 神戸 14:10 825 神戸 14:45 高知 15:30 346 高知 16:00 小牧 17:00 367 小牧 17:30 青森 18:50 368 青森 19:20 小牧 20:45 ルート16 便名 出発地 出発時間 到着地 到着時間 351 小牧 7:10 花巻 8:20 352 花巻 8:50 小牧 10:05 345 小牧 11:55 高知 12:55 824 高知 13:25 神戸 14:10 825 神戸 14:45 高知 15:30 346 高知 16:00 小牧 17:00 347 小牧 18:25 高知 19:25 348 高知 19:55 小牧 20:55 ルート17 便名 出発地 出発時間 到着地 到着時間 351 小牧 7:10 花巻 8:20 352 花巻 8:50 小牧 10:05 345 小牧 11:55 高知 12:55 824 高知 13:25 神戸 14:10 825 神戸 14:45 高知 15:30 346 高知 16:00 小牧 17:00 313 小牧 17:55 福岡 19:20 150 福岡 20:00 静岡 21:25 ルート18 便名 出発地 出発時間 到着地 到着時間 351 小牧 7:10 花巻 8:20 352 花巻 8:50 小牧 10:05 345 小牧 11:55 高知 12:55 824 高知 13:25 神戸 14:10 825 神戸 14:45 高知 15:30 346 高知 16:00 小牧 17:00 313 小牧 17:55 福岡 19:20 314 福岡 20:05 小牧 21:25 ルート19 便名 出発地 出発時間 到着地 到着時間 351 小牧 7:10 花巻 8:20 352 花巻 8:50 小牧 10:05 345 小牧 11:55 高知 12:55 824 高知 13:25 神戸 14:10 825 神戸 14:45 高知 15:30 346 高知 16:00 小牧 17:00 327 小牧 18:05 熊本 19:30 328 熊本 20:10 小牧 21:30 ルート20 便名 出発地 出発時間 到着地 到着時間 411 小牧 7:45 出雲 8:45 412 出雲 9:15 小牧 10:15 383 小牧 11:05 山形 12:10 602 山形 12:40 新千歳 14:00 603 新千歳 14:35 山形 15:50 386 山形 16:20 小牧 17:30 347 小牧 18:25 高知 19:25 348 高知 19:55 小牧 20:55 ルート21 便名 出発地 出発時間 到着地 到着時間 411 小牧 7:45 出雲 8:45 412 出雲 9:15 小牧 10:15 383 小牧 11:05 山形 12:10 602 山形 12:40 新千歳 14:00 603 新千歳 14:35 山形 15:50 386 山形 16:20 小牧 17:30 313 小牧 17:55 福岡 19:20 150 福岡 20:00 静岡 21:25 ルート22 便名 出発地 出発時間 到着地 到着時間 411 小牧 7:45 出雲 8:45 412 出雲 9:15 小牧 10:15 383 小牧 11:05 山形 12:10 602 山形 12:40 新千歳 14:00 603 新千歳 14:35 山形 15:50 386 山形 16:20 小牧 17:30 313 小牧 17:55 福岡 19:20 314 福岡 20:05 小牧 21:25 ルート23 便名 出発地 出発時間 到着地 到着時間 411 小牧 7:45 出雲 8:45 412 出雲 9:15 小牧 10:15 383 小牧 11:05 山形 12:10 602 山形 12:40 新千歳 14:00 603 新千歳 14:35 山形 15:50 386 山形 16:20 小牧 17:30 327 小牧 18:05 熊本 19:30 328 熊本 20:10 小牧 21:30 ルート24 便名 出発地 出発時間 到着地 到着時間 411 小牧 7:45 出雲 8:45 412 出雲 9:15 小牧 10:15 373 小牧 10:45 新潟 11:40 504 新潟 12:10 福岡 14:05 505 福岡 14:40 新潟 16:20 374 新潟 16:50 小牧 17:50 347 小牧 18:25 高知 19:25 348 高知 19:55 小牧 20:55 ルート25 便名 出発地 出発時間 到着地 到着時間 411 小牧 7:45 出雲 8:45 412 出雲 9:15 小牧 10:15 345 小牧 11:55 高知 12:55 824 高知 13:25 神戸 14:10 825 神戸 14:45 高知 15:30 346 高知 16:00 小牧 17:00 367 小牧 17:30 青森 18:50 368 青森 19:20 小牧 20:45 ルート26 便名 出発地 出発時間 到着地 到着時間 411 小牧 7:45 出雲 8:45 412 出雲 9:15 小牧 10:15 345 小牧 11:55 高知 12:55 824 高知 13:25 神戸 14:10 825 神戸 14:45 高知 15:30 346 高知 16:00 小牧 17:00 347 小牧 18:25 高知 19:25 348 高知 19:55 小牧 20:55 ルート27 便名 出発地 出発時間 到着地 到着時間 411 小牧 7:45 出雲 8:45 412 出雲 9:15 小牧 10:15 345 小牧 11:55 高知 12:55 824 高知 13:25 神戸 14:10 825 神戸 14:45 高知 15:30 346 高知 16:00 小牧 17:00 313 小牧 17:55 福岡 19:20 150 福岡 20:00 静岡 21:25 ルート28 便名 出発地 出発時間 到着地 到着時間 411 小牧 7:45 出雲 8:45 412 出雲 9:15 小牧 10:15 345 小牧 11:55 高知 12:55 824 高知 13:25 神戸 14:10 825 神戸 14:45 高知 15:30 346 高知 16:00 小牧 17:00 313 小牧 17:55 福岡 19:20 314 福岡 20:05 小牧 21:25 ルート29 便名 出発地 出発時間 到着地 到着時間 411 小牧 7:45 出雲 8:45 412 出雲 9:15 小牧 10:15 345 小牧 11:55 高知 12:55 824 高知 13:25 神戸 14:10 825 神戸 14:45 高知 15:30 346 高知 16:00 小牧 17:00 327 小牧 18:05 熊本 19:30 328 熊本 20:10 小牧 21:30 ルート30 便名 出発地 出発時間 到着地 到着時間 341 小牧 7:20 高知 8:20 342 高知 8:50 小牧 9:50 353 小牧 10:35 花巻 11:45 354 花巻 12:15 小牧 13:30 365 小牧 14:10 青森 15:30 366 青森 16:00 小牧 17:25 347 小牧 18:25 高知 19:25 348 高知 19:55 小牧 20:55 ルート31 便名 出発地 出発時間 到着地 到着時間 341 小牧 7:20 高知 8:20 342 高知 8:50 小牧 9:50 353 小牧 10:35 花巻 11:45 354 花巻 12:15 小牧 13:30 365 小牧 14:10 青森 15:30 366 青森 16:00 小牧 17:25 313 小牧 17:55 福岡 19:20 150 福岡 20:00 静岡 21:25 ルート32 便名 出発地 出発時間 到着地 到着時間 341 小牧 7:20 高知 8:20 342 高知 8:50 小牧 9:50 353 小牧 10:35 花巻 11:45 354 花巻 12:15 小牧 13:30 365 小牧 14:10 青森 15:30 366 青森 16:00 小牧 17:25 313 小牧 17:55 福岡 19:20 314 福岡 20:05 小牧 21:25 ルート33 便名 出発地 出発時間 到着地 到着時間 341 小牧 7:20 高知 8:20 342 高知 8:50 小牧 9:50 353 小牧 10:35 花巻 11:45 354 花巻 12:15 小牧 13:30 365 小牧 14:10 青森 15:30 366 青森 16:00 小牧 17:25 327 小牧 18:05 熊本 19:30 328 熊本 20:10 小牧 21:30 ルート34 便名 出発地 出発時間 到着地 到着時間 341 小牧 7:20 高知 8:20 342 高知 8:50 小牧 9:50 383 小牧 11:05 山形 12:10 602 山形 12:40 新千歳 14:00 603 新千歳 14:35 山形 15:50 386 山形 16:20 小牧 17:30 347 小牧 18:25 高知 19:25 348 高知 19:55 小牧 20:55 ルート35 便名 出発地 出発時間 到着地 到着時間 341 小牧 7:20 高知 8:20 342 高知 8:50 小牧 9:50 383 小牧 11:05 山形 12:10 602 山形 12:40 新千歳 14:00 603 新千歳 14:35 山形 15:50 386 山形 16:20 小牧 17:30 313 小牧 17:55 福岡 19:20 150 福岡 20:00 静岡 21:25 ルート36 便名 出発地 出発時間 到着地 到着時間 341 小牧 7:20 高知 8:20 342 高知 8:50 小牧 9:50 383 小牧 11:05 山形 12:10 602 山形 12:40 新千歳 14:00 603 新千歳 14:35 山形 15:50 386 山形 16:20 小牧 17:30 313 小牧 17:55 福岡 19:20 314 福岡 20:05 小牧 21:25 ルート37 便名 出発地 出発時間 到着地 到着時間 341 小牧 7:20 高知 8:20 342 高知 8:50 小牧 9:50 383 小牧 11:05 山形 12:10 602 山形 12:40 新千歳 14:00 603 新千歳 14:35 山形 15:50 386 山形 16:20 小牧 17:30 327 小牧 18:05 熊本 19:30 328 熊本 20:10 小牧 21:30 ルート38 便名 出発地 出発時間 到着地 到着時間 341 小牧 7:20 高知 8:20 342 高知 8:50 小牧 9:50 373 小牧 10:45 新潟 11:40 504 新潟 12:10 福岡 14:05 505 福岡 14:40 新潟 16:20 374 新潟 16:50 小牧 17:50 347 小牧 18:25 高知 19:25 348 高知 19:55 小牧 20:55 ルート39 便名 出発地 出発時間 到着地 到着時間 341 小牧 7:20 高知 8:20 342 高知 8:50 小牧 9:50 345 小牧 11:55 高知 12:55 824 高知 13:25 神戸 14:10 825 神戸 14:45 高知 15:30 346 高知 16:00 小牧 17:00 367 小牧 17:30 青森 18:50 368 青森 19:20 小牧 20:45 ルート40 便名 出発地 出発時間 到着地 到着時間 341 小牧 7:20 高知 8:20 342 高知 8:50 小牧 9:50 345 小牧 11:55 高知 12:55 824 高知 13:25 神戸 14:10 825 神戸 14:45 高知 15:30 346 高知 16:00 小牧 17:00 347 小牧 18:25 高知 19:25 348 高知 19:55 小牧 20:55 ルート41 便名 出発地 出発時間 到着地 到着時間 341 小牧 7:20 高知 8:20 342 高知 8:50 小牧 9:50 345 小牧 11:55 高知 12:55 824 高知 13:25 神戸 14:10 825 神戸 14:45 高知 15:30 346 高知 16:00 小牧 17:00 313 小牧 17:55 福岡 19:20 150 福岡 20:00 静岡 21:25 ルート42 便名 出発地 出発時間 到着地 到着時間 341 小牧 7:20 高知 8:20 342 高知 8:50 小牧 9:50 345 小牧 11:55 高知 12:55 824 高知 13:25 神戸 14:10 825 神戸 14:45 高知 15:30 346 高知 16:00 小牧 17:00 313 小牧 17:55 福岡 19:20 314 福岡 20:05 小牧 21:25 ルート43 便名 出発地 出発時間 到着地 到着時間 341 小牧 7:20 高知 8:20 342 高知 8:50 小牧 9:50 345 小牧 11:55 高知 12:55 824 高知 13:25 神戸 14:10 825 神戸 14:45 高知 15:30 346 高知 16:00 小牧 17:00 327 小牧 18:05 熊本 19:30 328 熊本 20:10 小牧 21:30 ルート44 便名 出発地 出発時間 到着地 到着時間 301 小牧 7:00 福岡 8:25 302 福岡 9:00 小牧 10:20 383 小牧 11:05 山形 12:10 602 山形 12:40 新千歳 14:00 603 新千歳 14:35 山形 15:50 386 山形 16:20 小牧 17:30 347 小牧 18:25 高知 19:25 348 高知 19:55 小牧 20:55 ルート45 便名 出発地 出発時間 到着地 到着時間 301 小牧 7:00 福岡 8:25 302 福岡 9:00 小牧 10:20 383 小牧 11:05 山形 12:10 602 山形 12:40 新千歳 14:00 603 新千歳 14:35 山形 15:50 386 山形 16:20 小牧 17:30 313 小牧 17:55 福岡 19:20 150 福岡 20:00 静岡 21:25 ルート46 便名 出発地 出発時間 到着地 到着時間 301 小牧 7:00 福岡 8:25 302 福岡 9:00 小牧 10:20 383 小牧 11:05 山形 12:10 602 山形 12:40 新千歳 14:00 603 新千歳 14:35 山形 15:50 386 山形 16:20 小牧 17:30 313 小牧 17:55 福岡 19:20 314 福岡 20:05 小牧 21:25 ルート47 便名 出発地 出発時間 到着地 到着時間 301 小牧 7:00 福岡 8:25 302 福岡 9:00 小牧 10:20 383 小牧 11:05 山形 12:10 602 山形 12:40 新千歳 14:00 603 新千歳 14:35 山形 15:50 386 山形 16:20 小牧 17:30 327 小牧 18:05 熊本 19:30 328 熊本 20:10 小牧 21:30 ルート48 便名 出発地 出発時間 到着地 到着時間 301 小牧 7:00 福岡 8:25 302 福岡 9:00 小牧 10:20 373 小牧 10:45 新潟 11:40 504 新潟 12:10 福岡 14:05 505 福岡 14:40 新潟 16:20 374 新潟 16:50 小牧 17:50 347 小牧 18:25 高知 19:25 348 高知 19:55 小牧 20:55 ルート49 便名 出発地 出発時間 到着地 到着時間 301 小牧 7:00 福岡 8:25 302 福岡 9:00 小牧 10:20 345 小牧 11:55 高知 12:55 824 高知 13:25 神戸 14:10 825 神戸 14:45 高知 15:30 346 高知 16:00 小牧 17:00 367 小牧 17:30 青森 18:50 368 青森 19:20 小牧 20:45 ルート50 便名 出発地 出発時間 到着地 到着時間 301 小牧 7:00 福岡 8:25 302 福岡 9:00 小牧 10:20 345 小牧 11:55 高知 12:55 824 高知 13:25 神戸 14:10 825 神戸 14:45 高知 15:30 346 高知 16:00 小牧 17:00 347 小牧 18:25 高知 19:25 348 高知 19:55 小牧 20:55 ルート51 便名 出発地 出発時間 到着地 到着時間 301 小牧 7:00 福岡 8:25 302 福岡 9:00 小牧 10:20 345 小牧 11:55 高知 12:55 824 高知 13:25 神戸 14:10 825 神戸 14:45 高知 15:30 346 高知 16:00 小牧 17:00 313 小牧 17:55 福岡 19:20 150 福岡 20:00 静岡 21:25 ルート52 便名 出発地 出発時間 到着地 到着時間 301 小牧 7:00 福岡 8:25 302 福岡 9:00 小牧 10:20 345 小牧 11:55 高知 12:55 824 高知 13:25 神戸 14:10 825 神戸 14:45 高知 15:30 346 高知 16:00 小牧 17:00 313 小牧 17:55 福岡 19:20 314 福岡 20:05 小牧 21:25 ルート53 便名 出発地 出発時間 到着地 到着時間 301 小牧 7:00 福岡 8:25 302 福岡 9:00 小牧 10:20 345 小牧 11:55 高知 12:55 824 高知 13:25 神戸 14:10 825 神戸 14:45 高知 15:30 346 高知 16:00 小牧 17:00 327 小牧 18:05 熊本 19:30 328 熊本 20:10 小牧 21:30 ルート54 便名 出発地 出発時間 到着地 到着時間 321 小牧 8:00 熊本 9:25 322 熊本 10:05 小牧 11:25 345 小牧 11:55 高知 12:55 824 高知 13:25 神戸 14:10 825 神戸 14:45 高知 15:30 346 高知 16:00 小牧 17:00 367 小牧 17:30 青森 18:50 368 青森 19:20 小牧 20:45 ルート55 便名 出発地 出発時間 到着地 到着時間 321 小牧 8:00 熊本 9:25 322 熊本 10:05 小牧 11:25 345 小牧 11:55 高知 12:55 824 高知 13:25 神戸 14:10 825 神戸 14:45 高知 15:30 346 高知 16:00 小牧 17:00 347 小牧 18:25 高知 19:25 348 高知 19:55 小牧 20:55 ルート56 便名 出発地 出発時間 到着地 到着時間 321 小牧 8:00 熊本 9:25 322 熊本 10:05 小牧 11:25 345 小牧 11:55 高知 12:55 824 高知 13:25 神戸 14:10 825 神戸 14:45 高知 15:30 346 高知 16:00 小牧 17:00 313 小牧 17:55 福岡 19:20 150 福岡 20:00 静岡 21:25 ルート57 便名 出発地 出発時間 到着地 到着時間 321 小牧 8:00 熊本 9:25 322 熊本 10:05 小牧 11:25 345 小牧 11:55 高知 12:55 824 高知 13:25 神戸 14:10 825 神戸 14:45 高知 15:30 346 高知 16:00 小牧 17:00 313 小牧 17:55 福岡 19:20 314 福岡 20:05 小牧 21:25 ルート58 便名 出発地 出発時間 到着地 到着時間 321 小牧 8:00 熊本 9:25 322 熊本 10:05 小牧 11:25 345 小牧 11:55 高知 12:55 824 高知 13:25 神戸 14:10 825 神戸 14:45 高知 15:30 346 高知 16:00 小牧 17:00 327 小牧 18:05 熊本 19:30 328 熊本 20:10 小牧 21:30 該当なし小牧発以外 利用した時刻表Gisthttps://gist.github.com/unyacat/a04bbc2ab0bfac5d755e8208009db4112021年3月27日から2021年10月30日までのFDA時刻表．急いで作ったので間違いの可能性あり．予定されている欠航を考慮していない．2021年3月27日から2021年10月30日までのFDA時刻表．急いで作ったので間違いの可能性あり．予定されている欠航を考慮していない． - fda_timetable_210328_211030.csv document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/2021/03/05/fda-8-flight-210328-211030/"},{"title":"Docker を利用して快適な Firefox Send のサーバーを自宅で建てる","text":"Firefox Send をネタに Web サーバーを自宅で建てます．自宅内外問わず円滑に使えるように設定をすることを目標にします． Firefox Send とは ファイルを簡単に相手に送付できるWebサービスです． 特徴として n 日経ったら / n 回ダウンロードされたらリンク無効化できる機能に加え，アップロードされたファイルは暗号化されて安全に保管されるというものがあります． 後者の特徴故よからぬ使い方をする者も多かったようで Firefox によるホスティングは 2020 年 9 月で終了してしまいました． 目的Firefox Send を家のネットワーク内にあるサーバー機でホスティングします． また，家の内外でも支障なく利用できることを目指します． 環境 サーバー機: CentOS 8 docker-compose version 1.27.4, build 40524192 ローカルIP を 192.168.1.111 に固定 DNS: Cloudflare send.example.com に立てたいとします． ルーター: PR-500MI 物理サーバーを「サーバー機」，ソフトウェアのサーバーを単に「サーバー」とします． 実行とりあえず Firefox Send サーバーを起動してみるソースコードは Archived になっているものの GitHub から入手することができ，Docker 化もされているのですぐに起動することができます．推奨されていませんが docker-compose で組んでいきます．といいつつも参考記事の丸パクリです． firefox-send/docker-compose.yml12345678910111213version: \"3\"services: web: build: . links: - redis ports: - \"1443:1443\" environment: - REDIS_HOST=redis - FXA_REQUIRED=false redis: image: redis:alpine 192.168.1.111:1443 にアクセスして正常に動作していることを確認します． DDNS の設定Cloudflare の DNS タブからサブドメインを登録します．固定 IP でない場合ダイナミック DNS を利用します． DDNS 未設定の場合アドレス更新には oznu/cloudflare-ddns を利用しています．ひとまず A レコードで Name: send，Content: 適当な IP アドレス(ex. 1.1.1.1)を登録しておきます． cloudflare-ddns/docker-compose.yml123456789version: '2'services: cloudflare-ddns: image: oznu/cloudflare-ddns:latest restart: always environment: - API_KEY=XXXXX-XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX - ZONE=example.com - SUBDOMAIN=send docker-compose up -d をして，Cloudflare の画面上で IP が変わっていれば良い感じです． DDNS 設定済みの場合既存で DDNS が設定されているドメインがあれば CNAME で登録しても動きます． これにより対象ドメインにアクセスがあれば家につながるようになりました． ポート開放ルータにアクセスし(192.168.1.1) 詳細設定 &gt; 静的IPマスカレード から 80 番(HTTP)と 443 番(HTTPS) にアクセスしたものをサーバー機に流すように設定します． リバースプロキシと SSL(Let’s Encrypt)1 つのサーバーだけ建てるのならばそのまま通信受ければ良いですが，ほかにもサーバーを起動したくなった場合は通信を振り分けられず困ってしまいます． 同じサーバー機の上で複数サーバーを起動してても， send.example.com はこのサーバーで受ける，hoge.example.com はこのサーバーで受ける…… といったことができるようにリバースプロキシを設定します．nginx-proxy を使います． ついでなので Let’s Encrypt を利用して SSL 化しておきます． nginx-proxy/docker-compose.yml123456789101112131415161718192021222324252627282930313233343536373839404142434445version: '3.7'services: nginx-proxy: image: jwilder/nginx-proxy container_name: nginx-proxy restart: always ports: - 80:80 - 443:443 volumes: - html:/usr/share/nginx/html - dhparam:/etc/nginx/dhparam - vhost:/etc/nginx/vhost.d - certs:/etc/nginx/certs:ro - /var/run/docker.sock:/tmp/docker.sock:ro labels: - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy networks: - public letsencrypt: image: jrcs/letsencrypt-nginx-proxy-companion container_name: nginx-proxy-lets-encrypt restart: always depends_on: - nginx-proxy volumes: - certs:/etc/nginx/certs:rw - vhost:/etc/nginx/vhost.d - html:/usr/share/nginx/html - /var/run/docker.sock:/var/run/docker.sock:ro networks: - publicvolumes: certs: html: vhost: dhparam:networks: public: external: true Firefox Send 側の docker-compose.yml も編集します． firefox-send/docker-compose.yml1234567891011121314151617181920212223version: \"3\"services: web: build: . links: - redis restart: always ports: - \"1443:1443\" environment: - FXA_REQUIRED=false - REDIS_HOST=redis - BASE_URL=send.example.com - VIRTUAL_HOST=send.example.com - LETSENCRYPT_HOST=send.example.com - LETSENCRYPT_EMAIL=admin@example.com redis: image: redis:alpinenetworks: default: external: name: public docker network create --driver=bridge public して， docker-compose up -d します． ここまでで外からアクセスすれば正しく表示されるはずです．(されない場合は SSL まわりがうまくいってないかもしれません．Cloudflare の SSL/TLS 設定を変えると解決するかもしれません．) しかしながらこのままだと家の中からアクセスした場合は無理です． DNS サーバーを家の中向けに起動する．家の中のクライアントは Windows だけ・・・となれば hosts ファイルを直接いじることで家の中でも支障なく利用できます． しかしながらスマートフォンなど hosts ファイルを通常操作できないものもあります．ここで DNS サーバーを起動して解決します． andyshinn/dnsmasq を利用します． dns/docker-compose.yml12345678910111213version: '2'services: dnsmasq: restart: always image: andyshinn/dnsmasq container_name: dnsmasq ports: - \"53:53/udp\" - \"53:53/tcp\" extra_hosts: - \"send.unyacat.net:192.168.1.111\" cap_add: - NET_ADMIN docker-compose up -d します． 次に DNS サーバーの存在を家中に知らしめる必要があります． ルータにアクセスし，詳細設定 &gt; DNS 設定 から，自ドメインに対しては起動した DNS サーバーを利用するように設定します．IPv4 のやり方はこちら 完成家の中でも外からでも同じアドレスにアクセスしても使えるはずです． おまけ試しに画像を 1 枚アップロードしてみました． ファイルの暗号化はされているのか12345unyacat@rabbithouse /m/2/firefox-send&gt; file IMG_6231.JPG # アップロード前IMG_6231.JPG: JPEG image data, Exif standard: [(略)], baseline, precision 8, 3626x5439, frames 3unyacat@rabbithouse /m/2/firefox-send&gt; file 1-17eeb501acab3f88 -i # アップロード後1-17eeb501acab3f88: application/octet-stream; charset=binary ファイルサイズに変化はあるか1234unyacat@rabbithouse /m/2/firefox-send&gt; wc -c IMG_6231.JPG | awk '{print $1}' # アップロード前12636056unyacat@rabbithouse /m/2/firefox-send&gt; wc -c 1-17eeb501acab3f88 | awk '{print $1}' # アップロード後12639358 中身は分からないですね．サイズは少し増大しました． 感想Docker 便利すぎ． 参考Firefox Send に何が起きたのですか？ さようならFirefox Send。あなたは私のT4gインスタンスの中で永遠に生き続けます!! CA marked some of the authorizations as invalid [Windows] Hostsファイルの追記方法、確認方法 修正2020/10/20: DNSのルータ設定を修正しました． document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/2020/10/05/firefox-send-host-on-local/"},{"title":"Splatoon3の戦績をstat.inkに自動アップロードするGitHub Actions","text":"Splatoon3の戦績をstat.inkに自動アップロードするGitHub Actions GitHub Actions上で実行すると環境を持たなくてよいメリットとともに最新のコードでアップロードできるので任天堂側の仕様変更による認証ミスで詰まらずに済むというメリットがあります．(※たぶん) やり方s3sを用いてstat.inkにデータをアップロードします． 1. s3sを手元で動かす手元で動かしてstat.inkにアップロードできるかどうかを試すとともに認証情報を手に入れます． git clone https://github.com/frozenpandaman/s3s cd s3s python3 -m pip install -r requirements.txt python3 s3s.py -nsr -r コマンド実行して， stat.incの鍵をコピー&amp;ペーストします． 生成された Nintendo.com のリンクを開いてこの人にするを右クリックしてリンクをコピーして貼り付けます． 両方入力したら戦績がアップロードされるはずなので待ちます． s3sディレクトリにconfig.txtが生成されているはずなので開きます． 2. ymlに認証情報を書いてコミットする適当なリポジトリを作って .github/workflows 以下に 適当なファイル名.yml を作って以下のコードをペタリしておきます． 11行目以下env部をconfig.txtから同じ名前の部分を置換します．(GitHub ActionsのEnvironment secretsに書くべきな気はする) Gist 123456789101112131415161718192021222324252627282930313233343536373839404142434445name: Splatoon3 Battlelog Uplorderon: schedule: - cron: '0 19 * * *' # 朝4時 workflow_dispatch:jobs: build: runs-on: ubuntu-latest env: # 適宜置換する API_KEY: \"***\" ACC_LOC: \"***\" GTOKEN: \"***\" BULLETTOKEN: \"***\" SESSION_TOKEN: \"***\" F_GEN: \"***\" name: Splatoon3 Battlelog Uploader steps: - name: Set up Python 3.11 uses: actions/setup-python@v4 with: python-version: 3.11 - name: Checkout frozenpandaman/s3s uses: actions/checkout@v3 with: repository: 'frozenpandaman/s3s' path: s3s - name: Generate config.txt working-directory: s3s run: | echo '{\"api_key\": \"${{ env.API_KEY }}\", \"acc_loc\": \"${{ env.ACC_LOC }}\", \"gtoken\": \"${{ env.GTOKEN }}\", \"bullettoken\": \"${{ env.BULLETTOKEN }}\", \"session_token\": \"${{ env.SESSION_TOKEN }}\", \"f_gen\": \"${{ env.F_GEN }}\" }' &gt; config.txt cat config.txt - name: Install s3s requirements working-directory: s3s run: | pip install -r requirements.txt - name: Run s3s working-directory: s3s run: | python3 s3s.py -nsr -r # python3 s3s.py -osr -r コミットすると毎朝4時に自動で戦績がアップロードされます． document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/2022/12/29/gh-actions-splatoon-battlelog-uploder/"},{"title":"キャンペーンを併用しまくって大阪難波に 350 円で 1 泊してきた話","text":"GoTo キャンペーン，大阪いらっしゃいキャンペーン，そしてじゃらんの割引を併用して大阪難波に 1 泊実質 350 円で泊まってきました． 泊まったところ・プラン相鉄フレッサイン 大阪なんば に泊まりました．なんばと名前がついていますが本当は日本橋駅から北に徒歩2分の場所です．一応難波駅からでも歩けます． 利用したプランは【大阪いらっしゃい】一人旅行 館内レストラン 朝食・夕食（ちょい飲み付き）プラン というもので大阪いらっしゃいキャンペーンの対象となるように値段設定されたプランでした． 各種割引を適用する1. GoTo キャンペーン - 35%引き世間では誰が対象だとか対象でないだとかわかりにくいと騒がれていた例のアレです．実質半額などとも言われていましたがあれは現地で使えるクーポンの付与を含んだものでありクーポンの配布されていない 8 月の時点ではそれを除いた 35% の旅行代金の割引のみが使えます． 始まった直後はキャンペーン対象かどうかは泊まっている時点ではわからない，後で申請して返してもらうというなんとも不安でいっぱいのキャンペーンだったものの 7 月後半から各種旅行サイトなどが予約時点で割引がされるように対応が進められ使いやすくなりました．GoTo トラベル対象の宿泊施設にはそうである旨の表示がなされているのでそれを確認して予約すれば 35% OFF を適用できます． 2. 各ホテルの割引 - 1500円引き宿泊施設独自で割引を行っている場所もあるので併用します．GoTo トラベルの割引と併用できないサイトもありますがじゃらんはできました．割引率は施設により様々ですのでいろいろ漁り最安に近づけるものを探しました． 3. じゃらん期間限定ポイント - 500円引きPonta ポイントで唐突に付与されていたポイントを消化しました．会員登録していたらそこそこ頻繁に付与してくれると思います．時におでかけへと駆り出すトラップへと変貌します(過去2敗) 4.大阪いらっしゃいキャンペーン - 2500円還元関西２府４県(大阪府・滋賀県・京都府・兵庫県・奈良県・和歌山県)に住んでいる人が大阪で 7000 円(税別) の宿泊プランを利用すると 2500 円の指定の電子マネーが返ってくる制度です．税込にすると 7700 円なところが注意です．宿泊時に案内の紙をもらえます． ちなみに何回でも利用できます．タイトルに記載が「大阪いらっしゃい」の記載があるものだけが対象のようです．今気づきました．気をつけて予約しましょう． 5.じゃらんのポイント付与 - 約150ポイント還元7700 円に対して付与されるので通常 Ponta ポイント 77P とじゃらん限定ポイント 77P が付与され合計 154P の還元を受けられます． 結局いくらなの7700 x 0.65(GoTo) - 1500(ホテルごとの割引) - 500(ポイント) - 2500(大阪いらっしゃい) - 150(じゃらんP) ≒ 350 円です． 期間限定ポイント以外は何度でも利用できるので誰でも一泊 850 円になりますね．やばいわよ！ 勝手にここを前提に書きましたが地方自治体独自の還元制度適用かつ GoTo 対象ならどこでもとても安く泊まれそうです．家に引きこもるくらいなら経済を回そう(適当) 感想ここからはおまけです．このままだと日記要素が薄いのとステマ感があるから適当に書きます． 建物・対応建物からは古さを感じますがとても綺麗でした．もともとは相鉄の建物ではないので内装などの雰囲気は相鉄のものではないと思います．接客がとてもよかったです．そうにゃんには会えませんでした． 人の入り・感染症対策ご飯の時は夜は誰もいませんでしたし，朝も自分が食べている間に1人来ただけだったので少ないのは確かだと思います． 部屋の入り口の上にインジケータがあり，部屋に人がいるかいないかがわかるようになっていたのですが．それを見る限りはほぼ人いなかったです．というかそういう機能があることに帰りにやっと気づいたくらい人がいませんでした．(防犯上不安ではある．掃除の時間だけつく仕様なのかもしれませんが) 感染症対策としても GoTo 対象なのでもちろん至るところにアルコールが配置されていますし体温も測られます．加えて部屋に除菌液が2袋おいてありました．おでかけのときには便利です． ご飯これがとてもしんどかった．冷凍食品感をもっと消して欲しいですね．特に夜のお好み焼きが 1cm くらい厚さのあるパンケーキの上にソースが載っているようなものでないほうがマシなのではないかと思いほどです．他にもいろいろあって無限に愚痴が出そうになりますがご飯の量を減らしてでもいいから味をなんとかして欲しいですね．でも人の入りを考えれば仕方のないことないことだろうかとも思いますし 350 円を思えば心も安らぎます． 夜は 19 時に行ったのですがどうやら私が最後の客だったようで自分のためにひたすら待っていただいたと思うと申し訳なくなりました． 朝ごはんも然り．無料トッピングも選べます(追加も自由)．多そうに見えてどう考えても朝から食べるものではないものが何個もありますね． 料金設定大阪いらっしゃいの対象になるように値段を引きあげクーポンをばらまいて元の値段に調整するというのはなかなかうまくやっていらっしゃりますね．7700円にして7700円引きクーポン配ったら2500円儲かるんじゃないの 7700 円の宿泊をしにいったとは思えませんでしたが満足です． 総評値段を思えば満足です．適当に買い物なり観光なりするなりして，寝るだけなら部屋はダブルベッドですしとても満足だと思います．ご飯は外で食べればいいと思います．ワーケーションのように作業しに行くならもっと部屋にお金を割いているようなプランを選ぶべきだと思いました．近鉄の 1day おでかけきっぷを利用したい人にもおすすめです． document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/2020/08/12/goto-osaka-jalan-350/"},{"title":"Hugo で Twitter Cards を自動生成させる","text":"この記事は Kaigen Discord Advent Calendar 2018 の12月12日枠です。 このブログを見てできること記事.mdに画像 URL が埋め込まれているときは summary_large_image (2:1の画像が使われた大きめのカード)を適用し、ない場合は summary (正方形の画像が使われた小さめのカード) で埋め込めるようになる機能を実装します。 標準実装されている機能だと画像が一切適用されなかったので作りました。 環境使用テーマ: Icurus 1234567891011# 記事.md+++banner = \"https://lh5.googleusercontent.com/hogehoge\"description = Title = etc = +++# config.toml[social] twitter = \"unya_2\" バージョン 12$ hugo envHugo Static Site Generator v0.49.2 windows/amd64 実装 layout/partials 下に twitter_cards.html を作ります。 12345678910111213 {{- with $.Params.banner -}}&lt;meta name=\"twitter:card\" content=\"summary_large_image\"/&gt;&lt;meta name=\"twitter:image\" content=\"{{ $.Params.banner }}\"/&gt;{{ else -}}&lt;meta name=\"twitter:card\" content=\"summary\"/&gt;&lt;meta name=\"twitter:image\" content=\"{{ .Site.Params.avatar | absURL }}\"/&gt;{{- end }}&lt;meta name=\"twitter:title\" content=\"{{ .Title }}\"/&gt;&lt;meta name=\"twitter:description\" content=\"{{ with .Description }}{{ . }}{{ else }}{{if .IsPage}}{{ .Summary }}{{ else }}{{ with .Site.Params.description }}{{ . }}{{ end }}{{ end }}{{ end -}}\"/&gt;{{ with .Site.Social.twitter -}}&lt;meta name=\"twitter:site\" content=\"@{{ . }}\"/&gt;&lt;meta name=\"twitter:creator\" content=\"@{{ . }}\"/&gt;{{ end -}} 3行目 banner ではない名前の設定をしていれば置換したり、banner のところに相対パスを書いているならば “| absURL” を追加したりしてください。config.toml に Twitter ID を書いていないのならば 11，12 行目 content 部に Twitter ID を直接書くことでも対応可能です． head.html に埋め込みます。 1{{ partial \"twitter_cards\" . }} を head タグ内の好きなところに追記します。 おわり。 Card validator に URL を打ち込むと確認し、即時実装可能です document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/2018/12/11/hugo-twitter-card/"},{"title":"SpotifyAPIで見る水瀬いのり楽曲","text":"Spotifyには楽曲の特徴量を取得できるAPIがあります． BPMやキーなど一意に決まりそうな特徴量もありますが，ダンスのしやすさやポジティブさなど曖昧な数値も取得することが出来ます． https://developer.spotify.com/documentation/web-api/reference/Web API Reference | Spotify for DevelopersMusic, meet code. Powerful APIs, SDKs and widgets for simple and advanced applications. これを用いて水瀬いのりさんの楽曲を覗いてみました． 今回は，danceability(ダンスのしやすさ)，energy(活力さ)，acousticness(アコースティックさ)，liveness(ライブ音源っぽさ)，valence(ポジティブさ)に注目してみます． 🎵取得範囲水瀬いのりさんがライブツアーで歌う楽曲とします． 具体的には，2021年末までにリリースされた「夢のつぼみ」以降のシングル・アルバム + 「まっすぐに、トウメイに。」です． アルバムとシングルどちらも入っている曲も値が違ったためどちらとも取得しました． 👑ランキング特徴量と説明，上位・下位，感想の順に書いていきます． 💃danceability(ダンスのしやすさ)テンポ、リズムの安定性、ビートの強さ、全体的な規則性に基づいてダンスのしやすさを表現しています．高いほどダンスに適しています． 🥇1位: Morning Prism(0.726) 最下位: 僕らは今(0.198) 朝をテーマとした曲であるMorning Prismが1位でした．常に同じ調子で曲が進行するのでリズムの安定性という面では納得です． 反対にライブ映えする楽曲である「僕らは今」や「Ready Steady Go!」は下のほうになりました． 💪energy(活力さ)高いほどエネルギッシュです．デスメタルでは高く，クラシックでは小さくなります．ダイナミックレンジ、知覚されるラウドネス、音色、オンセットレート、一般的なエントロピーなどに基づきます． 🥇1位: 夢のつぼみ(0.992) 最下位: いつもずっと(0.41) デビューシングルがかなり高い値を取っての1位．元気の良さが楽曲にも現れていることでしょうか．下には「いつもずっと」「あの日の空へ」「BLUE COMPASS」など落ち着くような，少し長めの曲が並びました． 🎸acousticness(アコースティックさ)高いほど非電気楽器的な楽曲です． 🥇1位: BLUE COMPASS(0.884) 最下位: クリスタライズ(0.000511) 数値に大きく差が付きました．energy項で下の方に並んだ楽曲ではこちらでは上位に入っています．「クリスタライズ」は納得の最下位．一つ上の「Catch the Rainbow!」と比べても1桁違い，圧倒的電子音楽ないのり楽曲と言えます． 🎤liveness(ライブ音源っぽさ)高いほどライブ音源に近い値です．0.8を超えればライブ音源の可能性が高いです． 🥇1位: Dreaming Girls(0.544) 最下位: Ready Steady Go!(0.0375) 「Dreaming Girls」をライブっぽさという観点で聴いたことはありませんでした．でもこのランク付けなら「Ready Steady Go!」もライブっぽい気がするのですが・・・！？ 🥰valence(ポジティブさ)valence の値が大きいほど，ポジティブ（Happy, Cheeful, euphoric: 楽しい、陽気、多幸的）です．逆に値が低いとネガティブ (sad, depressed, angry: 悲しい、抑圧された、怒り) な楽曲です． 🥇1位: 夏の約束(0.941) 最下位: 僕らは今(0.149) これも数値に大きな幅が生まれました．女性向けコンテンツの主題歌としてリリースされていることもあり取得範囲の中では少し特殊な楽曲である「夏の約束」が1位．一番下の「僕らは今」はlivenessさも低いところから見るとSpotifyさんは良さをわかってくれていないようです・・・．(いい曲ですよ！) 🖥結果生データGoogle Docshttps://docs.google.com/spreadsheets/d/1qpGOeD6z1jSpTcGcbhGwAX54eIv-hTfdEJTnNHrrhpM/edit?usp=sharing&amp;usp=embed_facebookSpotify APIで見る水瀬いのり楽曲result track_name,album_name,album_type,danceability(ダンスのしやすさ・高いほど踊りやすい),energy(活力さ・高いほどエネルギッシュ),key(https://en.wikipedia.org/wiki/Pitch_class),loudness(dB値・音の大きさ),mode(major=1 minor=0),speechiness(言語の多さ),acousticness(アコースティックさ・高いほど非電気楽器的),instrumentalness(インストルメンタルさ・目安0.5以上でインストルメンタルと判断できる),liv… 💭感想見たことない観点で楽曲を見れる楽しさもありますね． BPM推定は「Happy Birthday」が203.961と圧倒的な値を叩き出してくれました．高難易度誕生日会が開けますね・・・．(体感98-102くらいな気がします．序盤(ゆっくり)とサビ(早め)の部分の両方をいい感じにするとこんなものなのかもしれません) document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/2021/12/12/inoriminase-with-spotify-api-2021/"},{"title":"学生専用クレカのJALカードnaviでも限度額(ご利用可能枠)が10万から30万に引き上がった","text":"学生向けのおすすめクレジットカードとしてよく紹介されるJALカードnavi．お得な点は多いですが欠点もあります．それは「利用可能額が10万しかない」ことです．学生専用カードながら所持して1年超で枠が30万まで拡大したので記録に残しておきます． 利用状況カードのこれまで 2019年12月 - カード作成 自分名義の4枚のカードとしてJALカードnaviを友人の招待で申し込みました．親権者同意はなしでした． この時，マイルがもらえるという理由で楽Pay(リボ払い)を枠と同じ10万円に指定．なお後にも先にも手数料を払ったことはないです． 2020年12月 - 楽Pay解除 2021年3月 - 枠が30万に 3月にメールとはがきが来て上限が引き上がったことを確認．1月から2月にかけて変更したとの記載がされていました． 利用状況中央値4万円/月ほど，年間で50万ほどの利用をしていました．利用していない月もあります． プリペイドカードであるKyashへのチャージをメインにしていました．JALカード特約店では直接利用し，Kyashの利用ができない加盟店での利用も行っていました． 支払い遅延は他カードも含めてありません． 考えられる理由以下はあくまでも予測であり明記されていないものです． 楽Pay(リボ払い)の利用をやめた楽Payは無手数料でショッピング保証がつくのでお得だと思い利用していましたがKyashへのチャージに保証がつくとは思えなかったので解除しました． その直後の月にハガキが来たので可能性は高そうです． 枠ギリギリの利用を繰り返した10万円になるギリギリまで(99千円表記になるまで)利用していました． Kyashへのチャージを指定金額チャージでマイルを回収しようとしていたので使うときは毎度限界まで来ていました． 考えにくい理由QUICPay の利用Kyash を利用していたので使うことは少なかったです． 加盟店今となってはマイル付与対象外加盟店になってしまったKyashへのチャージやauPAYへのチャージを繰り返していました．カード会社からは決済がどのようなものに使われているのか不透明だと思います．自分で言うのもなんですがよくないカード所有者だと思います． 他社カードの枠JALカードnaviの他にカード4枚も持っているので明らかに持ちすぎなのですが特に関係ないようです． document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/2021/03/16/jal-card-navi-raise-the-upper-limit/"},{"title":"3Dプリンタで物理アイコンを作った","text":"画像を元に3Dモデルを生成して自分の利用しているアイコンを3Dプリンタで印刷してみました．ついでに裏にNFCタグをつけて機能をもたせてみました． つくったもの3Dプリンタで物理アイコンを生成した〜 pic.twitter.com/n1jF4NQOPq— うにゃ (@unya_2) July 8, 2021 アイコンは 三白眼女の子メーカー｜Picrew で作りました．ありがとうございます🙏 つくる画像からSTLファイルを作る画像から STL ファイルにする都合の良いサイトがあったのでこれを活用しました． https://imagetostl.com/jp2D画像から3D STLファイルに変換する無料オンラインツール - ImageToStl無料で高速なオンラインツールで、.PNGと.JPGの2D画像を3D .STLファイルに変換し、3Dプリンタで印刷したり、お気に入りの3D編集パッケージにロードするのに適しています。ｇｐｇ カラー画像のまま入れると高低差がなめらかなのではっきりと凸凹が欲しいなら n 段階で白黒にすると良さそう．3Dモデルをうまく編集できない人間(私)は画像の段階でいじっておきましょう． Fusion360でストラップ穴をつけるFusion360でストラップを通す穴と土台をつけました．生成したSTLを読み込むときに大きさが10倍になったのでimagetostlの段階で1/10の大きさにし直しました．(そのままCHITUBOXとかに入れれば正しい大きさになったのですが……)同じく下面オフセットもimagetostlでできるのですが円形画像だと思ったようにできなかったのでFusion360で作りました． 印刷印刷してストラップつけるといい感じ！ おまけ: 裏にNFCタグを貼ってみる裏にNFCタグを貼ることで自サイトに飛ぶ機能を持たしてみました． まるでアイコンが画面の中に移っていくのよう・・・． 裏にNFCタグ貼ったので名刺代わりにもなる pic.twitter.com/SBsfaU3q50— うにゃ (@unya_2) July 8, 2021 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/2021/07/12/making-3d-icon/"},{"title":"二酸化炭素濃度センサーMH-Z14AとNanoPiでブラウザで見れる濃度計を作った(前編)","text":"集中力を高めるためには換気も大切らしい・・・ということでブラウザで見れる二酸化炭素濃度計を作りました． きっかけ換気推奨が推奨される今日この頃最近換気をするようによく耳にします👂．換気をすることで感染症対策😷のみならず，作業効率のアップ⤴️にもつながるようです．実際，建築物環境衛生管理基準(環境衛生上，良好な状態を目標にしている基準らしい) では 1000 ppm以下になるよう決められています．(Wikipedia) そこで自室の二酸化炭素濃度が気になりました👀 既存の商品は高い二酸化炭素濃度計を購入しようと Amazon 🛒でざっと検索したところまともそうな商品は 1 万円弱くらいで販売されていて，換気指標にするという目的に見合う金額ではありません😢 どうせならセンサーだけ買ってきた方がカスタマイズできるし良いのではないかと思いシステムを自作してみることにしました😄 用意したもの二酸化炭素濃度センサー(MH-Z14A)中華通販に興味があったのもあって Banggood で「NDIR 二酸化炭素」などと適当に検索して買いました💸 www.banggood.comhttps://jp.banggood.com/NDIR-CO2-Sensor-MH-Z14A-PWM-NDIR-Infrared-Carbon-Dioxide-Sensor-Module-Serial-Port-0-5000PPM-Controller-p-1248270.htmlNDIRCO2センサーMH-Z14APWMNDIR赤外線二酸化炭素センサーモジュールシリアルポート0-5000PPMコントローラーOnly US$22.99, buy best ndir co2 sensor mh-z14a pwm ndir infrared carbon dioxide sensor module serial port 0-5000ppm controller sale online store at wholesale price. 私は 2958 円で購入しましたが，この記事を書いているときに見たらセールで 2457 円で売ってました 😢 最初は 2 週間かかると書いてありましたが 5 日で届きました，初めての中華通販でしたが思ったより早くて驚きです💨 データシート📖はここです．仕様とか通信方法とか載っています． NanoPi NEO2秋葉原の秋月電子で昔購入したものです．家に転がっていたので実質 0 円です(購入金額は3240円です．) 1から作るなら Raspberry Pi Zero とかが無線接続できるので便利そうです． OS を入れるための micro SD も必要です．今回は Armbian をインストールしました． Nanopi Neo / Core 通信するための銅線 4本いい感じの被覆銅線がなかったので適当に落ちてた通信ケーブルの被覆を引きちぎりました．実質 0 円です． サイズ感左がMH-Z14A，右がNanoPi NEO2です．大きさは両者ともほぼほぼ同じで手の中に収まる大きさです🖐 センサーとNanoPiを接続するケーブルで繋ぐ赤枠のあたりを繋ぎます． Tx の対は Rx，Rx の対は Tx です． T は Transmitter，R は Receiver の意味なようです． 5V を V+，GND を V- につないで完成しました✨ 通信を有効化するUART，DAC，PWM の 3 つの方法で値を取得できるようです．今回は Serial port(UART) でやりました． $ sudo armbian-config System &gt; Hardware &gt; uart1 に ✔ して Save これにより ttyS1 としてアクセスできるようになりました． It supports UART0/1/2/3. You can access it via “/dev/ttySX”.NanoPi NEO2 動作確認値を取得するPython で実装・公開されている方がいたのでお借りしました．デバイスのパスを修正して実行💻． GitHubhttps://github.com/chez-shanpu/co2-sensor-pichez-shanpu/co2-sensor-piMH-Z14Aモジュール. Contribute to chez-shanpu/co2-sensor-pi development by creating an account on GitHub. 12$ python3 sensor.py{\"ppm\": 1676, \"dt\": \"2021-02-06T15:34:21.435596\", \"ts\": 1612593261.435775} 取得できました． キャリブレーション指定のコマンドを送信することでその時点での濃度を 400ppm として測定するようにしてくれます． 到着してすぐののときは外に放置しても 750ppm と考えられない数値が出てきたのでキャリブレーションは必要だと思います． 20分以上 400ppm 環境下に放置してコマンドを送信します．外気は410.5 ppm だそうので精度を求めない限り外気に晒すのが良いでしょう．二酸化炭素濃度の経年変化 先程のリポジトリにも実装されているのでそれを実行しました． 自動キャリブレーション機能もありオフィス・家庭向けにいい感じにしてくれるようです． 後半後半は WebUI 実装編です． document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/2021/02/06/mh-z14a-1/"},{"title":"二酸化炭素濃度センサーMH-Z14AとNanoPiでブラウザで見れる濃度計を作った(後編)","text":"集中力を高めるためには換気も大切らしい・・・ということでブラウザで見れる二酸化炭素濃度計を作りました．この記事は後編です． 前編まででセンサーから値を取得できるようになったので一安心しました． 適当に Web UI を構築する必要とされる機能をざっと書き上げたとき以下のようなものになりました． 定期的な記録 過去の情報の閲覧 自動的な更新 通知機能 実装 定期的な記録定時実行といえば crontab かな，と思いこんでいたのですが APScheduler というライブラリでも定時実行できるようで Flask 拡張もあったのでこれで実装することにしました． viniciuschiele/flask-apscheduler 指定時間おきに関数を呼び出せるので可能性は無限大です．Webhook で通知させたいとかならすぐにできそうです． 取得して数値を日付とともに SQLite に保存していきます． 画面Vue + Vuetify + vue-chart で行いました．手軽に綺麗な画面を構築できるので使っていて楽しいです． リアルタイム更新vue-chart の時間幅を記録時間ごとに変えることで実質リアルタイムグラフを実装できました． また，リアルタイムの数値を見れるように 10 秒おきにセンサーに値を取りに行くようにしました． 電源起動するたびに稼働するように設定するcrontab で NanoPi が起動するたびにFlaskが起動するように登録しておきます． @reboot python3 app.py 効果・感想上の画像を見てもわかる通り，締め切ってオンライン授業を受けていたら線形的に上昇，部屋を出てしばらくすれば一定の値を示し，換気をするとグッと下がる，など思っていたより換気による効果が出ていて面白かったです． 通知機能は換気に支配される生活が嫌だったので実装しませんでした． 換気の重要性を理解し，意識が変わったということだけでも効果は大きそうです． document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/2021/02/07/mh-z14a-2/"},{"title":"はじめての自作キーボード第一章 ~ 選定・組み上げ編","text":"自作キーボード，なぜか惹かれるものがあります．存在は遊舎工房とかマツコの知らない世界などで認知していたのですが，如何せんパーツの価格がどれもこれも高いです． そしてある日，めちゃくちゃ素晴らしい音を奏でるキーボードを叩いている @Hytusx をみてしまい，是非自分もお金をかけて手に入れてみたいと思ってしまいました． そこで自作キーボードの先輩である @Sigqq の手を借りながら選定し組み上げることとなりました． ここではパーツの選定と組み上げまでを書きます． 買ったもの用語が多く，何もわからない状態だったので完全に他人のおすすめに従って選定しました． 初めて自作パソコンを組み上げる時の感覚と似たようなものを感じます． パーツ名 購入サイト 名前 金額 詳細 キット Cannon Keys Bakeneko60 $129.99 スイッチ Drop Aqua King $67 62g / 90個 キーキャップ Drop Pegaso $80 Pegaso Base キーキャップ Drop Carnival $39 割引価格(定価$45) (クーポン) Drop -$10 (送料) Drop / CK $101.99 Drop: 76.99 / CK: 25 計 $407.98 / 45,490円 キット配列や打鍵音に影響する大切な部分です． 「キット」は基板・ケースとか，諸々「キーキャップ」と「キースイッチ」以外のものが入っているものです． 何もわからないので @Sigqq のおすすめに従うままに「Bakeneko60」を購入． @Sigqq 曰く，送料がめちゃくちゃ高いけど送料込みでもお買い得なほど良い商品だから早く買いなさい，とのこと．(実際に購入した2-3日後に売り切れになっていました．) Bakenekoという名前ですが特に猫要素はありません🐈 Cannon Keyshttps://cannonkeys.com/products/bakeneko-60Bakeneko60Introducing the CannonKeys Bakeneko60 CannonKeys is proud to offer an affordable in-stock aluminum keyboard with great sound and feel. Originally designed by kkatano, the Bakeneko60 is an open-source keyboard featuring an o-ring gasket. An o-ring between the plate and PCB provides friction to hold the plate/PCB assemb スイッチ触感に関わる大切な部分です． 自分が持っているキーボードはRazer Blackwidowの緑軸でクリッキー，HHKBでタクタイルのスイッチでしたので，未体験のリニアスイッチを採用することにしました． スイッチは売られている種類も大量なのに見た目で判断できず選ぶことが出来なかったので， @viveisdead がおすすめしていたスイッチを採用しました． Drophttps://drop.com/buy/everglide-aqua-king-mechanical-switchesEverglide Aqua King Mechanical Switches | Mechanical Keyboards | Keyboard Switches | DropDrop exclusive price and reviews: Everglide Aqua King Mechanical Switches | 5K+ Sold | The ocean may be deep, but it's a smooth ride all the way down. Take a... キーキャップ見た目と入力感に関わる大切な部分です． 自作キーボードの利点として自由に見た目を変えれることがあります．今回は2セット購入しました． まず1つめ．「Mito DCP Pegaso」は @Hytusx が実際に使っており実物触ったところ触り心地がよく見た目も可愛かったので同じものを買いました． Drophttps://drop.com/buy/drop-mito-project-mythos-pegaso-custom-keycap-setDrop + MiTo DCP Pegaso Custom Keycap Set | Mechanical Keyboards | Keycaps | Custom KeycapsDrop exclusive product, price and reviews: Drop + MiTo DCP Pegaso Custom Keycap Set | 4K+ Sold | Whether you know Pegasus from Greek mythology, the... 2つめ．「Carnival」は夢見りあむ感のある配色が刺さりました．セールで安く売られていたのとどうせ送料がかかるならと思い切って購入しました． 届いたら思っていたより主張の激しい色をしていたのでもしかしたらクローゼットで永遠眠ってるかも．でもキーキャップ気軽に変えれるのは自作キーボードのメリットだからいいよね． Drophttps://drop.com/buy/artifact-bloom-series-keycap-set-carnivalArtifact Bloom Series Keycap Set: Carnival | Mechanical Keyboards | Keycaps | PBT Keycaps | DropDrop exclusive price and reviews: Artifact Bloom Series Keycap Set: Carnival | 550+ Sold | Sweet treats, wild rides, and plush prizes to spare\u0014nothing beats... 組む開封まずは，Bakeneko60を開けます． 出てきたのはキーボードのパーツではなく，楽器でも入ってそうなケース．これは想定外過ぎてびっくりしました．さすが高いだけありますね・・・ 基板は質感がマットの黒色で，高級感があります． スイッチも開封します．梱包はこれで十分なんだよなぁなどと思ったり． 組み上げ組み立て方法は公式のWebページがわかりやすいです．ページが丁寧でこれだけ見てれば出来ました．Bakeneko Build Guide USBコネクタ，スタビライザをつけて，スイッチを刺すべき場所に差し込んでいきます．入っていく感触があるのでやりやすいです． 全部差し込みました．壮観です． Pegasoをつけてとりあえず完成です． 触り心地も音とも完璧でほんとうに良いです・・・✨ まとめキーボードを組むにあたり必要な3つのパーツの選定と組み上げを行いました． 次の記事ではキーキャップをちょっと付け替えてキーマップを変更していきます．(まだ書いていない) document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/2022/01/22/my-first-self-made-keyboard-1/"},{"title":"はじめての自作キーボード第二章 ~ 細かなカスタマイズ編","text":"第一章では自作キーボードに必要なパーツの選定と組み上げを行いました． ここでは自作キーボードならではの細かなカスタマイズを行っていきます． 🛠自作キーボードならではのカスタマイズ🔄 キーマップの変更キーマップを変更できるのも自作キーボードの魅力の1つです． キー1つ1つの機能を自由に変更できる他，レイヤー機能を使うことで同時押しで〇〇するなんかもできちゃいます．すごい． Bakeneko60だと VIA というソフトウェアを使えば端末側から気軽に変更できます． 配置僕はこのキーボードを組む前はHHKBを利用していたためHHKBライクにキーを配置しました． トップレイヤーはバックスペースが右上にあるのが遠すぎるので一段下に配置しました．またレイヤー操作を右下に配置しました． 1レイヤーはHHKB同様，右下キーと同時押しで矢印やPauseキーを入力できるようにしました． 2レイヤーは音楽操作を入れてみました． 日本語IME変換(Macintoshの日本語キーボードのような) Altキーで英数かな変換できるようにしたかったのですが調べた感じ難しそうです．端末側での調整が必要そう．私はalt-ime-ahkを導入しました． 🐾 キーキャップの差し替えかわいいキーキャップが売られているのも自作キーボードの魅力です． 肉球キーキャップ遊舎工房で肉球キーキャップを買ってきました🐾 1つで税込1430円です． 肉球がぷにぷにしてて最高です🐾 Varmilo ZOMO プラスチック版 肉球キーキャップ 🪔 潤滑剤を塗る(ルブ)キースイッチは分解でき，潤滑剤を塗ることでより滑らかな押し心地にすることができます． 私が買ったキースイッチ(Aqua King)には最初から潤滑剤が塗られており購入は不要のようです． ですが，せっかくの初めての自作キーボードということで@Sigqq のおすすめにより 205g0 を購入し，100円ショップで筆を買ってきて 動画を見ながら全部分解してぬりぬりしました． bakeneko60付属のスタビライザーにも潤滑剤を塗りました． 🗾 デスクマットの導入遊舎工房でデスクマットを購入しました．東京の地図が描かれています． 展示品の処分ということで定価の2割引の2816円でした． 地図がデスクマットになってるなんてとってもステキ．神戸版があれば是非購入したいです． 遊舎工房https://shop.yushakobo.jp/products/2785City Map Desk Mats美しい地図が印刷された大型サイズのデスクマットです ✨ 完成3Dプリンタで作った猫耳付きヘッドホンと共に写真を撮りました． 5万円とパソコン用キーボードとは思えない価格ですが，押し心地，触り心地，タイピング音ともにすべてが良すぎており，とても満足です．作ってよかったです． document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/2022/02/02/my-first-self-made-keyboard-2/"},{"title":"おうちでビットコインマイニングに挑戦！NiceHashからbitFlyerに送金して現金化した","text":"どうやら最近BTC価格が高騰して難易度も下がり仮想通貨のマイニングが再加熱しているらしい・・・．とそんな噂を嗅ぎつけてマイニングを初めてみました． 🛠 マイニングするマイニングは NiceHash を使えばソフトが勝手にやってくれるので初心者でも簡単にすぐに始められて楽です． 自分がメインで使っているPCに搭載されている GTX1070Ti も仮想通貨マイニングをしたくて購入した人からいただいたものだったのでそれを活用すべく暇があれば稼働させるようにしてみました． NiceHash は 0.001BTC 貯まらないと出金できない仕様になっています．つまり中途半端なマイニングでは電気代の無駄遣いです． 私は約 18 日くらい(!)かけて 0.001BTC のマイニングを達成しました． ⏩ 出金bitFlyer に直接送金すると高い18日間のマイニングを経てついに日本円に変える時が来ました． 自分は過去に bitFlyer の口座を開設していたのでこれに送金させるつもりでいました． しかし，いざ引き出そうとすると「Network Fee」で1割も天引きされかけます．これは送金手数料なので返ってきませんし，約2日分くらいのマイニング報酬が無と化してしまいます． Network Fee はどうやら変動するようで，高いときだと650円とか取られているような表記になりました． https://www.nicehash.com/support/general-help/nicehash-service/feesNiceHash - Leading Cryptocurrency Platform for Mining and Trading 💴 Coinbase を経由すると手数料半額NiceHash → CoinbaseCoinbase という取引所宛だと無料で出金できるとあったので早速登録しました．登録には本人確認も不要で電話番号とメールアドレスですぐに完了しました．ドキドキしながらも早速送金しました． 10 分も立たないうちに送金が完了しました． Coinbase → bitFlyer次に bitFlyer への送金です．Coinbase から bitFlyer に送金するには手数料はかかりますが，NiceHash から直接送金するときに比べておよそ半額で済ますことができました．(送金時のレートで0.00005592 = 280.43円) 30 分で送金できると出てきましたが，実際は 2 時間くらいかかりました． NiceHash から bitFlyer に送金するなら Coinbase を経由したほうが早いし安そうです． 🏦 最安は三菱UFJ銀行の口座宛て出金？Coinbase は三菱UFJ銀行が関わっていて，3万円未満なら110円と安くで出金できると書かれているページが見つかります．https://www.coinbase.com/legal/fees_disclosureCoinbase - Buy/Sell CryptocurrencyCoinbase is a secure online platform for buying, selling, transferring, and storing cryptocurrency.しかし実際は対応国一覧に日本は掲載されておらず，ビットコインの取引もできないようになっています． https://www.coinbase.com/placesCoinbase Supported Countries | CoinbaseCoinbase is a secure online platform for buying, selling, transferring, and storing digital currency. Coinbase が対応してくれたらこれが最安だと思います． 💰 損益仮に 18日間24時間稼働 PC消費電力 250W(ゲーミングPC想定) 大阪ガス電気 ベースプランA-G 350kWhをこえる分 27.83円/kWh とすると 250(W) * 24(h) * 18(days) / 1000(Wh → kWh) * 27.83(kWh/円) = 3000円 程度なので現状最高でも1BTC300万は割らない限りは利益が出そうです．実際には24時間稼働ではないし，350kWh以下ならもっと安いので損益分岐点はもっと下だと思います． bitFlyer の取引所で 1BTC495 万円で手放し 5310 円になりました． ざっくり 2500 円くらい儲けたようです． 収益率が悪いのはチューニングすればなんとかなりそうです(Powerを抑えると効率がよくなることにこの文章を書いているときに知りました…) ファンの騒音や熱の問題もあるので一概に誰にでもおすすめできるものではないですがなにもせず寝かしておくくらいならマイニングさせる価値はあると思います． ⚠ 注意bitFlyer から銀行に出金すると出金手数料が更にかかります．(つらい) 自分が試したときの結果であって，100%自分が試したとおりになる保証はないです．送金手段も最安かどうかもわかりません． document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/2021/02/14/nicehash-mining/"},{"title":"Node804のHDD固定ネジを買った","text":"PCケースのNode804のHDD固定ネジが足りなかったので買ってきました． フリマアプリでPCケースのNode804 を購入したのですが，HDD固定ネジが足りませんでした．色々巡ってこれを買ってきましたという日記です． HDDの固定するネジは UNC#6-32 (No.6 / 32山) という規格のようです．長さは1cmっぽい(インチ規格なのに)． ホームセンターに行って探してみたのですが，国内にはあまり無い規格のようで売ってませんでした． 三宮のドスパラに行って探してみたのですが，ここにも売ってませんでした． モノタロウには売っているのですが送料もかかるし・・・． 結局，ヨドバシ梅田まで行って UNC#6-32 8mm (長めと記載されてる) 規格のネジが何個か売っていたのでそれで固定したところいい感じに固定できました． 買ったのは これ です． どうせはまるならもっとネジ山が似てるやつ変えばよかったなぁ． document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/2021/08/03/node804-hdd-screw/"},{"title":"プリント基板でNFCタグ名刺を作ってみた","text":"名刺風の基板を設計してみました． 基板にはイラストを載せ，NFCタグとしての機能を持たせることにしました． そして基板製造サービスに依頼し製造してもらいました． 🧭 設計方針 基板にイラストを載せる NFCタグとして機能する 名刺としての役割を持たせる 基板設計ソフトにはEagleを使いました． 💳 基板のサイズ交通系IC・クレカ風にしてみたいということで同じ形の 86mm x 54mm としました．また角は3mm丸く削りました．一般的な名刺サイズより少し小さめです． Dimensionレイヤーでサイズを指定しました． 🎨 基板にイラストを描く基板での表現手法基板で多色表現をするには 導線・銅箔を配置する(Top, Bottom) シルクを載せる(tPlace, bPlace) レジストを載せない(tStop, bStop) を組み合わせます． 例えば，シルクを載せたら白くなり，導線を配置してレジストを載せないようにしたら導線が露出してキラキラします． プリント基板での表現が実際にどうなるかは以下のサイトで丁寧に解説されています． e3w2q.github.iohttps://e3w2q.github.io/13/PCBでの多色表現の解説と2UキーマクロパッドMX2U!を作った話 イラスト・文字を事前処理する各レイヤーに配置したい部分を白黒画像で出力します． 事前にお好みのペイントソフトで各レイヤーごとに分けておきます．出力時はEagleで読める2ビットBMPにしておきます． 対応してなければWindows標準のペイントソフトを使えば2ビットBMPに変換できます． 文字も同様に画像にして用意します． 今回，イラストは以前にことかす先生に依頼して描いてもらったものを使いました． 三白眼女の子メーカーあ… by ことかす@料理研究家 | Skeb 基板に載せる画像を基板データに変換していきます． オレンジ色のULPボタンを押して「import-bmp」，作成したBMPを選択し，黒白にチェック．スケールを選びそのまま「OK」，スクリプト実行画面が出てきたら「Run Script」を押して変換を始めます． 「Selection Filter」で欲しいレイヤーのみを指定し全体を選択．「Inspector」タブで全体を選びLayerを欲しいレイヤーに変更します． 🌐 NFCコイルを搭載する部品の選定NFCチップマルツで調べて1個単位で買える物の中で一番安いやつにしました． 裏面実装でハンダ難度高いし，容量少ないけど安さは正義です． NFC FORUM TYPE 2 TAG IC WITH 1.6 ST25TN01K-AFH5 STマイクロエレクトロニクス製｜電子部品・半導体通販のマルツ データシート LEDコイルとして機能しているかどうかを見るためにチップLEDも適当に購入しました． 薄型SMD1608チップLED(緑色、10個入) LTST-C190KGKT*10 Lite-on製｜電子部品・半導体通販のマルツ データシート $I = 20$mA時 $V_F = 2$V チップ抵抗LEDに流れる電流を調整するために必要な抵抗です． 入力電圧はアンテナ設計推奨ルールに基づいて2.8Vとします． $$R = \\frac{V_{CC} - V_{LED}}{I_{LED}} = \\frac{2.8 - 2}{20 \\times 10 ^ {-3}} = 40 \\Omega$$ 40Ωのチップ抵抗を買いました． 注文パーツと価格は以下の通りです． NFCコイルの設計Suicaの左側の台形を意識したコイルを搭載しました． まずNFCチップの内蔵容量から計算して，コイルの必要なインダクタンスを算出します． $$f = \\frac{1}{2 \\pi\\sqrt{LC}}$$ $$L = \\frac{1}{C (2 \\pi f) ^ 2 }$$ $$L = \\frac{1}{50 \\times 10 ^ {-12} \\times (2 \\pi \\times 15.56 \\times 10^6)^2 } = 2.755 \\mathrm{\\mu H}$$ 雑なシミュレーションの結果(ページ最後参照)，台形で5回巻きを線と線の間は0.4mm開けて実装することでうまくいきそうであることがわかりました． ✨ 基板データ完成コイルの中に銅箔は配置できないので右側にイラストを載せてコイルの内側にシルクで文字を載せました． 表面デザインで力尽きてしまったので裏面はQRを載せただけにしました． 👨‍🏭 製造製造はJLCPCBに依頼することにしました． 他のプリント基板製造サービスに比べてWebサイトのUIが良かったのと，送料は安いけど早いという口コミを見て選びました． 注文時にTwitterを見ると7ドルオフクーポンが配布されており，お得に製造してもらえました．感謝🙏 製造過程のGIFも見れて楽しかったです． 基板をJLCPCBで発注したんだけど各製造過程で行なっていることの動画がついてきて見ててとても楽しい pic.twitter.com/fDOP2Zen1Z— うにゃ🐈 (@unya_2) January 14, 2022 ✨ 基板完成中国から2週間弱で届きました． メガネと髪留めは銅箔が露出しているため光を照らすとキラキラします． 顔の部分にも銅箔を入れているため光にかざすと肌色に見えます． LEDと抵抗をつければ光ります．タグICをつければタグになります．LEDとICは両方つけても機能します． コイルもイラストも上手く出来てよかったです．完． NFCタグ機能付きの名刺基板を作ってみました💳 pic.twitter.com/QOId6AlyOS— うにゃ🐈 (@unya_2) February 5, 2022 おまけ雑なコイルシミュレーション基板コイルのインダクタンスの計算式を探したところ，ST公式のPDFに載っていたものの，形状に応じた定数があると判明． なんとなく長方形と同じだろうと思いつつも，練習を兼ねてFemtetでシミュレーションをしてみることに．とは言いつつも斜めのモデリングがめんどくさすぎたので1周で断念． ST公式計算サイトの四角の計算結果215.42μHに対して，214.7μHだったので最後余計に隙間開けた分も考慮すればほぼ同じだろうし，角丸くしたりするので精度はそこそこでいいやと判断し，四角のコイルとして計算サイトを使うことにしました． コイルとしての機能を持ちつつも，Suica風の形を保てそうなパラメータを探し，最も近しそうな以下の値で作ることにしました． ソルダレジストの色同じデータで同タイミングで注文したのですが，レジスト部が緑と黒で製造結果が異なってしまいました． シルクを1milごとにボーダー柄することで半分の白色になるのではないかと考え製造を依頼したものの，緑は全面白指定と変わりなく，黒では疎に線が入ってしまいました． 基板製造メーカによるかもしれませんが色の濃淡を調節するのは難しそうです． NFCチップの選び方基板に実装する際にサイズが小さすぎてコテで出来るが大変むずかしいです． それとアドレス帳データが入る容量くらいはあったほうが名刺としては良かったかもです． document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/2022/02/06/pcb-business-card/"},{"title":"PostGISにshpファイルをインポートする","text":"GISデータをLinux(Docker上)のPostGISにインポートする方法．手元のWindows機でshpファイルをSQLに変換した後，Linux機にアップロードしてインポートするときの流れ． 流れ今回は国土交通省のGISデータをインポートする． shp2pgsqlをダウンロードshp2pgsqlはshpファイルをSQLファイルに変換するやつ．PostgreSQLのバージョンにあった番号が振られてるやつ以下から落としてきたら良さそうhttps://download.osgeo.org/postgis/windows/ 展開した後，コマンドプロンプトを開き，中のbinディレクトリに移動する． shpをSQLに変換.\\shp2pgsql -W cp932 -D -I -s 4612 .\\{shp_filename}.shp {table_name} &gt; {hogehoge}.sql -W：文字コードの指定-D：ダンプ形式で出力(インポート効率がいい)-I:空間インデックスの作成-s：座標系指定 参考: https://qiita.com/miyatomo1122/items/0cb67455c294943ae649#%E3%82%B7%E3%82%A7%E3%83%BC%E3%83%97%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AE%E5%8F%96%E3%82%8A%E8%BE%BC%E3%81%BF データベースの作成今回はpostgis/postgis:14-3.2イメージで試した．(コンテナの中に入る)$ docker exec -it {container_name} sh PostgreSQLに接続$ psql -U postgres データベース作成postgres=# CREATE DATABASE {database_name} データベース選択postgres=# \\c n0221; PostGIS有効化postgres=# CREATE EXTENSION postgis; インポート# psql -U postgres n0221 &lt; /N02-21_GML/N02-21_RailroadSection.sql 終わり．インポートできたことを確認する． 詰まりどころPowerShellの文字コードのデフォルトがUTF-16LE&gt; chcp 65001でUTF-8になる PowerShellでリダイレクトすると文字化けするコマンド実行結果をファイルにリダイレクトしたときのデフォルトの文字コードはUTF-16に設定されている．(ﾄﾞｳｼﾃ)UTF-8にする設定もあるようで試してみたけどうまくいかず．PowerShellをやめてコマンドプロンプトで実行したら解決． PostGISの有効化忘れ有効化忘れ時インポートエラー文 12ERROR: function addgeometrycolumn(unknown, unknown, unknown, unknown, unknown, integer) does not existLINE 1: SELECT AddGeometryColumn('','stations','geom','4612','MULTIL... PostGISを有効化する．解決方法: コンテナ内で，psql -U postgres -d n0221 -c \"CREATE EXTENSION postgis;\" document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/2022/08/04/postgis-import/"},{"title":"PR-500MIでDNSサーバーをIPv4で指定する","text":"DNSを立てたのでPR-500MIにIPv4で設定しようと試みた話． 事象いざ登録しようとアドレスを 詳細設定 &gt; DNS設定 &gt; エントリ編集画面 に入力すると， プライマリDNSサーバアドレス不正なIPアドレスです。 と怒られてしまう．どうやらIPv6しか受け付けてくれないらしい． Google 検索すると知恵袋で別ルータにすると良いよと 提言 が見つかるが，その必要はない． 解決IPv4射影アドレスを使えば登録できる． IPv6 では::ffff:192.168.0.1 と表す事でIPv4しかサポートしていないノードとも通信できるようになる． が，このまま入力してもエラーが出てしまう． Chrome 等に http://[::ffff:192.168.0.1] のように打ち込むと http://[::ffff:c0a8:1]/ のように変換してくれる．これをDNSサーバアドレスに指定してあげるとIPv4でも設定できた． ほかのフレッツのルーターでもそうなのかな 参考いまさら聞けない、IPv6アドレス体系の基礎 (2/2)：これから始めるIPv6 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/2020/10/20/pr500mi-dns-ipv4/"},{"title":"大学の単位で第一級陸上特殊無線技士と第三級海上特殊無線技士を得た","text":"大学で指定された単位を取得することで第一級陸上特殊無線技士と第三級海上特殊無線技士資格を手に入れたので，手に入れるまでの流れを書き記しておきます． 指定された単位を取得して卒業する卒業後でないと申請できません． 書類を用意する総務省のサイトを見ながら用意します． 申請書申請書2つの資格を同時に申請する場合でもそれぞれ申請書が必要です．収入印紙を郵便局で購入します．1つの資格あたり1750円分が必要ですが，1750円の収入印紙は存在しません．郵便局で買えば1000 + 600 + 100 + 50 の4枚で売ってくれます．コンビニでも売ってくれるようですが，200円単位での在庫のようなので余分に買うことになります． 成績証明書・卒業証明書単位が取得できていると証明できるものを卒業後に取りにいきます．大学によってはコンビニで取得できることもあります． 住民票の写し役所へ取りにいきます．これもコンビニで取得できることもあります．他のもので代用できるとも書いてますが，普通の人はすぐにわからない/持っていない書類ですね． 返信用封筒簡易書留が推奨されているようです．後述しますが，2枚同時に申請する場合でも最低の料金で大丈夫そうです．84 + 320 = 404円分の切手を貼って入れておきます(2022年現在)． 取得までにかかる時間4月11日に郵便局窓口にて簡易書留で送付しました．5月22日に簡易書留で返送されてきました．おおむね1ヵ月で発給されるとありますが，ちょっと遅いような気もしますね．ゴールデンウィークを挟んだからでしょうか． 発給された手のひらサイズの紙に書かれた挨拶とともに，プラスチックの免許証が入ってました！カードを保護するものは何もなく，直接封筒に入ってました． 記事書いた経緯 そもそも2つの申請書を同封してよかったのか不安だった結果は何も問題はなかった． 返信用封筒に何円貼ればよいかわからなかったカード2枚と紙1枚なのでよほど大量に申請しない限りは最低料金で問題はないようだ．(5枚以上申請するなら怪しそう) 1ヵ月を超えて到着した1ヵ月と11日かかって到着することもある． 大学は「取れるよ」と言ってくれても申請の流れまでは教えてくれない． document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/2022/05/22/qualify-special-radio-operator-license-by-credit/"},{"title":"楽天モバイル MNO サポーターを終えて所感","text":"私は楽天モバイルが MNO として参入を挑戦しようとする一環でサポーターとして先行にお試しできる機会を頂いておりましたので感想を記します． 料金設定なども公表された中で神戸市に住み 2 次抽選に当選した私が感じたことを記しておきたいと思います． 📶 データ通信品質概ね良好でした．地下街や車内，空港，混雑した場所，そして朝昼夜の時間帯などを含め特段ここがだめだったというようなことはありません．サービス提供されたら使いたいと思うレベルです．高速移動しても新快速を含め全く問題は発生しませんでした． 速度も十分早いと思います．au ローミングエリアと比較すると多少遅いと思うことはありますが楽天モバイルをずっと使っていくとするならば気にはならないと思うくらいの速度です． しかしこれは全国的にそうであるとはいえないようです．東京に出向き JR 総武線快速を利用したのですが車内ではブツブツ途切れて全く使い物になりませんでした．地下街を歩いていても途中で急に通信速度が遅くなる状況に何度か遭遇しました． もう 1 つ問題点をあげるとすると，au とのローミングエリアとの境目でほぼ確実に切断されます．一度切断されると次にいつ電波を掴むのかわかりません．気にするのがめんどうだったので切断されるたび再起動していました．これはサービスエリアの狭い楽天モバイルを利用する上でかなり痛いことです． 📞 通話通話音質ははっきりとわかるレベルで悪いです．ノイズが多く入り相手の声がよく聞こえないこともあります．通話相手からも音質が悪いと指摘されるレベルです．同じ場所から docomo 回線を利用して通話したときの音質の良さに感動しました． 通話において発信し，受信側では通話を開始したのに発信側が接続を試行し続けている(ﾌﾟﾙﾙ…)ということがありました．再現できる条件がわからなかったのですが結構痛い不具合です． 楽天 Link に至っては発信できないことが何度もありました．いくら無料だと言っても発信できないのでは意味ありません．アプリデザインはシンプルで良いと思います． SMS は普通に使えます．普段から利用しているわけではないので品質の良し悪しまではわかりません． 💸 価格設定公式: Rakuten UN-LIMIT 月々 2,980 円 楽天エリア 使い放題 / au ローミングエリア + 海外 2GB 楽天 Link 利用で通話無料 / 通常 30 秒 20 円 1 年間利用料無料とのことですが，どうも高いように思います． 私が使っているなかで良いと感じた通信速度が人口の増加によって急激に落ちることが想定されます．それを踏まえるととてもではないが無料とは言え契約したいとは思えませんでした．通話はせめて楽天 Link の不具合を取り除いてほしかったです． 😃 その他私は楽天のために OPPO Reno A を購入しましたがとても快適です．購入するときに Kyash を利用したのですがこれがそのまま決済用カードになってしまいました．このままサービス開始されたら通信料金も Kyash で払えるのでしょうか．気になるところではあります． document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/2020/03/28/rakuten-mobile-supporter/"},{"title":"不快感を提供するだけだったのでブログに貼っていた広告を全部剥がした","text":"タイトルの通りです． 広告を貼り付けた理由どれくらいの収益がどのくらいのアクセス数で手に入るのか気になった． 広告を剥がした理由広告は人を不快にする割に収益状況が悪すぎたから． あまりに少ない収益状況最寄りのコンビニがファミリーマートではない人がTポイントを貯めるくらいのペースでした． 加えて，1クリックされるとうまい棒からチョコボールくらいの収益がごく稀に追加されていました． ブログ開始からのトータルではAmazon Prime Studentの年会費くらいの収益がありました． でも8000円以上じゃないと出金できないので実質収益は一切得ていないことになります． わかったこと ブログで収益を上げたいなら，専用のブログを立ててブログタイトルもクリックを誘導したり多量の広告を貼ったりなど戦略的にやるべき． あとからドメイン構造の方針転換をすることは難しいためGoogle Adsenseの導入は慎重に考えたほうがいい．Google Adsenseはドメインルートでないと申請を受け付けていないので必然的にブログがドメインルートに存在することになるが構造を変えるとなるとある程度のリダイレクト処理が必要になり結果として広告を剥がした後もドメインルートをブログ以外にすることは難しい．他の広告サービスはよくわかりません． document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/2022/10/16/remove-ads/"},{"title":"三ノ宮から神戸三宮？ 連絡運輸を利用して JR から他社線へのきっぷを作ってもらう","text":"この記事は Kaigen Discord Advent Calendar 2018 の12月21日の記事です。 鉄道には連絡運輸という制度が存在します。これは 2 社以上の会社が合意することにより 1 枚の乗車券で複数の会社の路線に乗れるようにする制度のことです。この制度が存在することによって乗り入れている電車に乗っていても会社別に乗車券を買うことなく乗車できます ここでは JR 線から他社線への連絡運輸を利用した青いきっぷを発券して遊んでみたので紹介していきます。 85mm 券マルス(窓口の人が操作する端末)に運賃が登録されている駅への連絡乗車券はこのサイズで発券されます。 三ノ宮から阪急神戸三宮までの乗車券です。 券面のような移動をしようと思えば歩いて 1 分もかからないですが、中身は三ノ宮駅から大阪駅まで JR 線を利用し阪急線の梅田駅まで移動してそこから阪急線で神戸三宮駅まで乗ることができるきっぷです。 このきっぷを使えば 730 円の出費をした上で 1 時間近くかけて三ノ宮から阪急神戸三宮まで移動することができます。もちろん JR と阪急は直接接続されていないので、大阪駅で改札外に出る必要があります。そのため大阪を散策することは可能です。 阪急線と JR では大阪駅(梅田駅)と三ノ宮駅(阪急神戸三宮駅)、宝塚駅で連絡するきっぷを発券することができます。 120mm 券次は、連絡運輸に対応しているもののマルスに運賃が登録されていない駅への乗車券です。 そのようなルートを利用する場合、120mm の大きいきっぷで発券されます。このサイズは自動改札機は利用できず、有人改札を通る必要があります。 JR 秋葉原から新宿で京王線に乗り換え、仙川駅まできっぷです。 実際に利用してみたところ、JR 線、京王線ともにスムーズに改札をしてくださいました。頻繁に利用者がいらっしゃるのでしょうか。 購入方法このページに掲載している乗車券は自動券売機で購入することはできません。そういうわけでみどりの窓口やみどりの券売機プラスを利用してこのルートのきっぷを作って欲しいと伝えて作ってもらいます。 みどりの窓口の人に「これこれのルートで作って欲しい」と伝えると「別々に買ってください」と言われました。そのため、お互い気まずくなりたくなければみどりの券売機プラスで作ってもらうのがよいと思います。 120mm で発券されるような乗車券はマルスに登録されていません。そのため、窓口の人が距離を調べて入力する必要があり時間がかかるようです。これは窓口を混雑させる原因になりかねません。実際、秋葉原→仙川は窓口で発券をお願いしましたが、作業に掛かる前に時間がかかるが良いかと確認を取られました。実際10分弱かかりました。 三ノ宮→阪急神戸三宮はみどりの窓口券売機プラスを利用しました。こちらは5分くらいかかりましたが、オペレータの方もすぐに内容を理解してくれたようでスムーズに発券することができました。 どことどこが連絡しているのかJR 線からの連絡運輸を受け入れている路線をまとめてくださっているウェブサイトがありますのでこちらを参考に乗車券を発券してみてください。http://mars.travel.coocan.jp/transfer.html document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/2018/12/21/renraku-unyu/"},{"title":"iPhone 7 Plus のバッテリーを自分で交換した","text":"iPhone 7 Plus のバッテリーを自分で交換しました．みんなもスマホのバッテリーが蓋の中にあるクソ仕様に負けずに交換しよう！ 状況バッテリーの最大容量は 69%，朝起きたら勝手に 1% になってるくらいはダメに．性能も何個かアプリつけるだけで画面がカクカクになるくらいでした． 必要だったもの バッテリー交換キット (2,580円) 500mlの四角いペットボトル相当のもの(画面を固定するもの) ドライヤー 修理時間約1時間+ メリット自分でできるのが楽しいiPhone の中身が見えるのが楽しいです．中の見えないところまで 🍎ロゴが入ってるのが確認できるって嬉しいですよね． 手順書がついてくるので割と誰でもできるついてない機種でもどうせ iFixit か YouTube にあります(私が買った製品に関して言えば)注意点ややらかした時のリカバリ方法・キットまでついてきたので安心でした．とは言え Taptic Engine をもとに戻す手順が抜けていることに注意です． デメリット非正規の店の方が安いかもしれない店でもいいなら一度検索して確認した方が良さそうです．🍎に関して言えば公式のほうがさすがに高いですが…(5400円) 画面を固定するノリがついてこないXperiaZ2 でバッテリー交換してきたときにはついてきたのですが画面を固定するノリがついてきません．でも，一応ひっかかりはあるので大丈夫だと思います． 感想買ったら 24 時間以内に家に到着したので感動した．Xperia Z2 に比べたら iPhone のほうが手順が多くてケーブルがごちゃっててめんどくさい． document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/2021/06/29/replace-iphone7p-battery/"},{"title":"Google Colab で StyleGAN2 を利用して手間なく無限にアニメ顔を生成して幸せになろう","text":"Google Colab 上で StyleGAN2 を動かしてアニメ顔を生成してみます． 今回は This Waifu Does Not Exist で利用されている学習済みモデルを借ります． 自前で動かすことでパラメータの調整が可能になり満足行くまで何枚でも生成できます． 準備モデルを用意します．学習済みモデルのダウンロードはこちら 7-ZIP等を利用し解凍した上で Google Drive の適当な場所にアップロードします． 実行Google Colab に 上げましたのでこれを実行すれば試すことができます． 下記 URL にアクセスして Playground モードにし ドライブにコピー してからランタイム &gt; すべてのセルを実行． https://colab.research.google.com/drive/1GeKHArMzxBiBNNp_Kk-W-y7tnIay_Op9Google Colaboratory https://colab.research.google.com/drive/1GeKHArMzxBiBNNp_Kk-W-y7tnIay_Op9 序盤に Drive へのアクセス権を求められます．URLに飛んでログインし，枠にコード貼り付けて Enter すれば許可されます． truncation-psitruncation-psi オプションを変更することで平均に近い顔を求めたりぶっとんだ画像を求めたりすることができます．負の値も取れます．参考 0 にすると平均の顔が出てきます． かわいい．茶眼茶髪の女子高生． 0.1まだ面影があります． 0.3面影はあるものの別のキャラと言えそうです． 0.5キャラが区別できる上に安定していますね． 0.7サイトに上がっている設定． 1.0 1.2良くも悪くも興味深い攻めた設定 10概念が生まれます． 著作権等すべての生成画像はパブリックドメイン(CC-0)のようです．参考 アイコン等に気兼ねなく使えそうです． document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/2020/05/05/run-twdnev3/"},{"title":"Scrapbox でナビゲーションバーにホームに戻るボタンを埋め込む UserCSS","text":"Scrapbox のナビゲーションバーを一番上にピン留めしてそこにホームに戻るボタンを配置する CSS です． どこからでもホームに戻れるのでとても便利です． 2021年2月に本家のCSSが更新されていたのを確認したので更新しました． 🌸 動作 👩‍💻 UserCSSアイコン隣の矢印を消す123span.kamon.kamon-caret-down { display: none;} ホームに移動するボタンを上に固定する12345678910111213141516171819202122232425.quick-launch .flex-box .flex-item .left-box { position: fixed; top: 0em; left: calc(calc(100% - 1184px) * 0.5 + 48px); color: white; z-index: 1000; } @media (max-width: 1276px) { .quick-launch .flex-box .flex-item .left-box { left: 86px; } } @media (max-width: 992px) { .quick-launch .flex-box .flex-item .left-box { left: 64px; } } @media (max-width: 768px) { .quick-launch .flex-box .flex-item .left-box { left: 56px; } } もっと適切な設定はありそうですがとりあえず． では良い Scrapbox ライフを👋 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/2021/02/06/scrapbox-pin-navbar/"},{"title":"神姫バスの燃料電池バス(水素バス)乗車記","text":"いま注目の水素を燃料として発電しながら走る燃料電池バスを神姫バスが西日本で初導入したと聞きつけ早速乗ってみました．機種はトヨタ自動車の「SORA」です．車両価格はなんと 1 億円！いまなら運行ダイヤが公開されておりほぼ確実に乗れそうです．公式ダイヤ(PDF) 外装まずは正面です． 黒基調の中に水素をイメージしたような青いライン．そして FUEL CELL BUS というアピールがあります． 次に側面と背面．上部は従来のバスでは見られないような大きな排気口があります．撮影しそこねましたが乗車ドアは観光バスによくあるような外に飛び出してきて横にスライドする形式でした．驚きつつもなにかに引っかかって壊れたりしないのかなと心配にもなりました．(大丈夫だとは思いますが) 車内全体進行方向右側は座席が収納されており，空間が生まれ混雑時にも多くの人を輸送できそうです．その上車椅子の人を乗せるときも手間が減り楽に対応できそうです． また，運転席には大きなモニターがついており，安全性もより向上してそうに思います． 後方座席から見た風景です．運賃案内の画面は前方後方と2枚ありとても見やすくなっています．手すりの黄色はよく目立ち急停車の際もすぐに見つけられそうです．そして理由はわかりませんが広告枠は前方にしか存在せず，入っている広告も少なめでした． 座席シートはかなり薄くなったような気がします．そして手すりは席に一体化しています．どこを見ても従来のバスの座席とは大きく異なります．取り付けも簡易な様相が伺えます． 少しネガティブに書きましたが悪いというわけではありません．座席下ヒーターがなくなっていることで空間ができ，足元にゆとりが生まれて快適になったように思います． そしてなんと座席にはコンセントがついています．本当に街中を走るために作られたバスなのか疑ってしまいます． 走行音まず加速がとても静かです．初動ももちろん静かですが，それ以上に感動したのはそこからの加速です．従来のバスだと効率よく加速するため(?)にエンジンが唸ったり緩まったりを繰り返していたため変化が激しくストレスだったのですがこのバスでは一度加速すれば音が一定で居心地が良いです．しかも停車すれば無音になります．すべてのバスがこれに置き換わればいいのに． 車内放送自動放送には英語放送が入っています． 「The next stop is 大手前通り です」と謎の文章を放っていたのが印象的でした． document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/2021/04/15/shinki-h2o-bus/"},{"title":"socket.io で接続は確認できるがイベントに反応してくれない問題の解決","text":"socket.io でサーバーに接続されてそうだけどそれ以上何もしてくれなくて困った話． 結論socket.io のバージョンはクライアントとサーバーで揃えよう 事象環境: Node.js + Express / React サーバー側に 12345io.on('connection', function (socket) { socket.on('message', (msg) =&gt; { console.log('socketio connected') })}); と書くとたしかに socket.io が接続されているログが流れるのに emit とか on には何も反応してくれない． localStorage.debug = '*'; でデバッグするとどうやら 1234567browser.js:181 engine.io-client:socket socket receive: type \"error\", data \"parser error\" +8msbrowser.js:181 engine.io-client:socket socket error {\"code\":\"parser error\"} +0msbrowser.js:181 socket.io-client:manager error +8msbrowser.js:181 socket.io-client:manager cleanup +0msbrowser.js:181 socket.io-client:manager reconnect attempt error +1msbrowser.js:181 socket.io-client:manager will wait 2696ms before reconnect attempt +0msbrowser.js:181 engine.io-client:socket socket close with reason: \"transport error\" +1ms と，エラーが出ていることは確認できるけどコードは正しそう． 解決クライアントの socket.io のバージョンが 2.0.3，サーバーのバージョンが 3.0.3 だった． 両者を 3.0.3 に揃えたらうごいた． 1234567891011121314151617181920212223// server const express = require('express');const app = express();http = require('http').createServer(app);const io = require('socket.io')(http, { cors: { origin: '*', }})...// client (React)import io from \"socket.io-client\";const socket = io.connect(\":3000\");...class BulletinBoard extends React.Component&lt; ... componentDidMount() { socket.on('message', function(data: any) { console.log(data); }) ...} document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/2020/12/04/socket-io-different-version/"},{"title":"Windows Updateを適用したらWSLが起動しなくなった","text":"備忘録です．今日，Windows Update を適用してバージョン20H2(ビルド 19042.746)に更新したところWSLが起動しなくなりました． 結局初期化して解決させました． 現象Ubuntu が起動しなくなりました．最初は VSCode から WSL にアクセスできないとエラーが発生して何事かと思いましたが WIndows Terminal から開こうとしても [プロセスはコード 1 で終了しました] ([process exited with code 1])とだけ表示されて何もできなくなってしまいました． 試す管理者でPowershellを起動して netsh winsock reset と入力することで復活することもあるようです． GitHubhttps://github.com/microsoft/WSL/issues/4899WSL2-Ubuntu [process exited with code 1] under updating 19564.1005 · Issue #4899 · microsoft/WSLAs the title. I updated the insider version to 19564.1005. WSL2-Ubuntu cannot start. I got [process exited with code 1] error with Terminal-run. しかしこれでは解決せず，また更新プログラムを完全に適用したり再起動を繰り返しましたが変化はありませんでした． 初期化結局Ubuntuを初期化することにしました． [アプリと機能] &gt; Ubuntu の [詳細オプション] &gt; リセット項 [リセット] をクリック． Ubuntu を起動しインストールを完了させます． Powershell で wslconfig.exe /setdefault Ubuntu を入力することでデフォルトをUbuntuに設定できました． document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/2021/01/16/wsl-windows-update-exit1/"},{"title":"Vue.js でリアクティブを捨てて高速にレンダリングする","text":"Vue.js + vue2-leaflet で v-for を利用している箇所で明らかに遅くなる事象にぶつかってしまいました． 20 個程度の配列だとなめらかに動くのに何千個の配列を扱うとかなり重くなってメモリをモリモリ食って Chrome を落としてしまうほどになってしまうほどでした． Object.freeze()リアクティブから解き放つには Object.freeze() を利用すると良いようです．リアクティブを諦めることで高速化を望めるようです． 123456789data: function () { return { data: {\"id\": 123, \"name\": \"hoge\", ...} }}mounted(): { this.data = Object.freeze(this.data)} 早速試してみましたが，どうやら恩恵が受けられているとは思えず速度が改善することはありませんでした． 深くまで Object.freeze() が効かない例えば以下のように， 12345678deta = {\"id\": 123, \"name\": \"hoge\", \"like\": { // ここまで効いてない \"fruit\": \"strawberry\", \"pasta\": \"carbonara\", ... }} 子のプロパティを持っていた場合，子は freeze されていないようです． 再帰的に実行することで深くまで Object.freeze() してあげると良さそうです．(あんまり深いとパフォーマンスが心配になりますが) 12345678methods: { deepFreeze(obj) { Object.keys(obj).forEach(prop =&gt; { if (typeof obj[prop] === 'object' &amp;&amp; !Object.isFrozen(obj[prop])) deepFreeze(obj[prop]); }); return Object.freeze(obj); }}; これで無事解決しました． Devtools を導入していない環境で確認してみるなぜか Vue Devtools 拡張を導入していると遅くなる事象が発生するようです． 悩む前に一度シークレットモードなどで試してみたほうが良さそうです． 参考Qiitahttps://qiita.com/isuke/items/441c21e7f99e3a619803Vue.jsで大きなObjectを扱うときはObject.freezeすると100倍くらい速くなるよ - Qiitaタイトル通りなのでとりあえず結果を見てもらいましょう。 See the Pen EMNpVM by isuke (@isuke) on CodePen. 実行結果  正確な測定ではないですが明らかな速… GitHubhttps://github.com/30-seconds/30-seconds-blog30-seconds/30-seconds-blogThe official 30-seconds blog. Contribute to 30-seconds/30-seconds-blog development by creating an account on GitHub. document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/2021/01/20/vue-freeze-faster/"},{"title":"Twitterエゴサ用検索コマンド","text":"エゴサするときに便利なので検索保存しておくと良いと思います． 検索コマンド[エゴサしたいワード] -from:[自分のID] filter:follows意味[エゴサしたいワード] → 単純に検索ワード -from:[自分のID] → 検索結果から自分のツイートを除く。複数指定可、サブ垢とかで同じ名前を入れてる時などに使える。 filter:follows → フォロワーの中から検索する、フォロー外まで検索したいときは消す。(公式ページに乗ってないため稀にこれのために検索結果が0になる時がある) 例うにゃ -from:unya_2 -from:unya_3 filter:follows document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/2017/04/07/twitter-egosearch/"},{"title":"中古で買ったLenovo Tab3(601LV)を文鎮にして蘇生させた","text":"名古屋 大須の「ワールドモバイル 大須アメ横店」でLenovo Tab3(601LV) を買ってきました． ジャンクコーナのカゴにどっさりタブレットとかスマホが並んでいる中からこれならまだ使えそうと選んだ一品． 価格は1,650円．外観はSD・SIMトレイカバーがないことや黄ばみが目立つ感じ． それよりも問題なのは画面ロックが掛けられたままの状態ということ．まぁ適当に検索すればなんとかなると甘く考え購入．しかし・・・ 👨‍🔧工場出荷状態へリセットを試みるもできず一度電源を落として電源ボタン・音量ボタンをタイミング良く押すとドロイド君が拝めたりリカバリー画面に突入できます． 中のデータには興味がないので全リセットの勢いで向かってきます． 隠しコマンド、見つけちゃいました！ | 札幌でiPhone修理・故障は安心の道内企業アイフォンクリア 信用・信頼・高技術の『期待に応える誠実なiPhone修理店』 なんとか突入できたもののFactory Reset に類する項目は見つかりませんでした． 🙀海外ROMを焼きを試すも失敗601LVの前機種，501LVで海外版のROMを焼いている人がいました． 501LVはソフトバンク向けにカスタムされたものですが，海外で中身が同じ「Lenovo Tab 2 A8-50」という機種が発売されているされているようです． 【501LV】文鎮化したのでROMを焼き直した話 601LVで同じことができないかと，中身で似た機種を探すと「TB3-850M」が出てきました． 早速 ROM 探して書き込みを試みます． Lenovo Tab 3 8 TB3-850M Stock Firmware ROM (Flash File) しかし，エラーを吐いてしまいます． よくみると搭載チップがTB3-850MのほうはMT6735に対して601LVのほうはMT8735が搭載されています．チップが違うので書き込めないとエラーを出されてしまいました． しかもここで文鎮化してしまいます．絶望． 他に601LVは501LVの上位互換という情報からLenovo Tab 2 A8-50のROMを焼いてみたりしましたが動かずでした． 🔥601LVのROMを購入して焼いた買ってから絶望し，半年以上が経ちました． なんとなく2chを探すとソフトバンク版のROMが海外サイトで買えるされているという情報がありました． 【全機種】Lenovoタブレット総合【全キャリア】 ここまでやってきてもう消費したくなかったのでリンク先からROMを購入することにしました． 601LV_S_USR_S100021_1707031034_MPM0._JPSECURE.zip | GEM-FLASH Firmware 3GB2.99ドルのプランを購入．買った時は日本円で340円でした． 支払画面は選択肢が多くややこしうえにPaypalは見当たらなかったのですが，とりあえずカード番号が入りそうなPaymentwallを選び決済しました．Revolutの使い捨てカード番号はこういうときに気軽に利用できるので便利ですね． ✨起動SPFlashToolを使い，書き込みを行うと無事起動することができました． ようそこの画面は安心します． Wi-Fiの選択画面でエラーらしきものが表示されていますがこのあとはなんら問題なく動作しました． 2.4GHz帯は掴むのですが5GHz帯は掴んでくれません． 📱601LVの動作・感想文章を読むのには十分に使えそうですし，機嫌がいい時はテレビ番組も視聴にも使えます． でもストレージが16GBしかなくアプリのインストール・更新をしているときにストレージが足りませんと怒られてしまいました．実際に使えるのは10.3GBだけのようです． 8インチで1280×800ドットなので画面がモヤっとしますし，YouTubeで2倍速再生したら紙芝居のようになることも．Wi-Fiの速度もあんまりでていないようです． とはいえ4年以上前の端末に求めることではないのかもしれません． 2021年5月時点で新品で1万弱のものを実質2000円で手に入れられたのでとても満足です． Androidタブレット「Lenovo TAB3」が9,980円！LTE対応の未使用品が大量入荷 - AKIBA PC Hotline! document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","link":"/2021/11/08/used-601lv-flash-rom/"}],"tags":[{"name":"日記","slug":"日記","link":"/tags/%E6%97%A5%E8%A8%98/"},{"name":"モニター","slug":"モニター","link":"/tags/%E3%83%A2%E3%83%8B%E3%82%BF%E3%83%BC/"},{"name":"RG240Y","slug":"RG240Y","link":"/tags/RG240Y/"},{"name":"AdguardHome","slug":"AdguardHome","link":"/tags/AdguardHome/"},{"name":"Tailscale","slug":"Tailscale","link":"/tags/Tailscale/"},{"name":"広告ブロック","slug":"広告ブロック","link":"/tags/%E5%BA%83%E5%91%8A%E3%83%96%E3%83%AD%E3%83%83%E3%82%AF/"},{"name":"AM2301B","slug":"AM2301B","link":"/tags/AM2301B/"},{"name":"NanoPi","slug":"NanoPi","link":"/tags/NanoPi/"},{"name":"温湿度","slug":"温湿度","link":"/tags/%E6%B8%A9%E6%B9%BF%E5%BA%A6/"},{"name":"AtCoder","slug":"AtCoder","link":"/tags/AtCoder/"},{"name":"GoogleAppsScript","slug":"GoogleAppsScript","link":"/tags/GoogleAppsScript/"},{"name":"Twitter","slug":"Twitter","link":"/tags/Twitter/"},{"name":"Vue","slug":"Vue","link":"/tags/Vue/"},{"name":"BootstrapVue","slug":"BootstrapVue","link":"/tags/BootstrapVue/"},{"name":"キャッシュレス","slug":"キャッシュレス","link":"/tags/%E3%82%AD%E3%83%A3%E3%83%83%E3%82%B7%E3%83%A5%E3%83%AC%E3%82%B9/"},{"name":"クレジットカード","slug":"クレジットカード","link":"/tags/%E3%82%AF%E3%83%AC%E3%82%B8%E3%83%83%E3%83%88%E3%82%AB%E3%83%BC%E3%83%89/"},{"name":"絵文字","slug":"絵文字","link":"/tags/%E7%B5%B5%E6%96%87%E5%AD%97/"},{"name":"水瀬いのり","slug":"水瀬いのり","link":"/tags/%E6%B0%B4%E7%80%AC%E3%81%84%E3%81%AE%E3%82%8A/"},{"name":"交通","slug":"交通","link":"/tags/%E4%BA%A4%E9%80%9A/"},{"name":"おでかけ","slug":"おでかけ","link":"/tags/%E3%81%8A%E3%81%A7%E3%81%8B%E3%81%91/"},{"name":"自宅サーバー","slug":"自宅サーバー","link":"/tags/%E8%87%AA%E5%AE%85%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC/"},{"name":"Docker","slug":"Docker","link":"/tags/Docker/"},{"name":"GitHub-Actions","slug":"GitHub-Actions","link":"/tags/GitHub-Actions/"},{"name":"Spotify","slug":"Spotify","link":"/tags/Spotify/"},{"name":"3Dプリンタ","slug":"3Dプリンタ","link":"/tags/3D%E3%83%97%E3%83%AA%E3%83%B3%E3%82%BF/"},{"name":"Fusion360","slug":"Fusion360","link":"/tags/Fusion360/"},{"name":"mh-z14a","slug":"mh-z14a","link":"/tags/mh-z14a/"},{"name":"二酸化炭素濃度","slug":"二酸化炭素濃度","link":"/tags/%E4%BA%8C%E9%85%B8%E5%8C%96%E7%82%AD%E7%B4%A0%E6%BF%83%E5%BA%A6/"},{"name":"キーボード","slug":"キーボード","link":"/tags/%E3%82%AD%E3%83%BC%E3%83%9C%E3%83%BC%E3%83%89/"},{"name":"自作キーボード","slug":"自作キーボード","link":"/tags/%E8%87%AA%E4%BD%9C%E3%82%AD%E3%83%BC%E3%83%9C%E3%83%BC%E3%83%89/"},{"name":"Bitcoin","slug":"Bitcoin","link":"/tags/Bitcoin/"},{"name":"マイニング","slug":"マイニング","link":"/tags/%E3%83%9E%E3%82%A4%E3%83%8B%E3%83%B3%E3%82%B0/"},{"name":"小銭稼ぎ","slug":"小銭稼ぎ","link":"/tags/%E5%B0%8F%E9%8A%AD%E7%A8%BC%E3%81%8E/"},{"name":"node804","slug":"node804","link":"/tags/node804/"},{"name":"名刺","slug":"名刺","link":"/tags/%E5%90%8D%E5%88%BA/"},{"name":"基板","slug":"基板","link":"/tags/%E5%9F%BA%E6%9D%BF/"},{"name":"JLCPCB","slug":"JLCPCB","link":"/tags/JLCPCB/"},{"name":"PostGIS","slug":"PostGIS","link":"/tags/PostGIS/"},{"name":"PostgreSQL","slug":"PostgreSQL","link":"/tags/PostgreSQL/"},{"name":"Windows","slug":"Windows","link":"/tags/Windows/"},{"name":"Linux","slug":"Linux","link":"/tags/Linux/"},{"name":"陸上特殊無線技士","slug":"陸上特殊無線技士","link":"/tags/%E9%99%B8%E4%B8%8A%E7%89%B9%E6%AE%8A%E7%84%A1%E7%B7%9A%E6%8A%80%E5%A3%AB/"},{"name":"海上特殊無線技士","slug":"海上特殊無線技士","link":"/tags/%E6%B5%B7%E4%B8%8A%E7%89%B9%E6%AE%8A%E7%84%A1%E7%B7%9A%E6%8A%80%E5%A3%AB/"},{"name":"大学","slug":"大学","link":"/tags/%E5%A4%A7%E5%AD%A6/"},{"name":"楽天モバイル","slug":"楽天モバイル","link":"/tags/%E6%A5%BD%E5%A4%A9%E3%83%A2%E3%83%90%E3%82%A4%E3%83%AB/"},{"name":"iPhone-7-Plus","slug":"iPhone-7-Plus","link":"/tags/iPhone-7-Plus/"},{"name":"Google Colab","slug":"Google-Colab","link":"/tags/Google-Colab/"},{"name":"Scrapbox","slug":"Scrapbox","link":"/tags/Scrapbox/"},{"name":"バス","slug":"バス","link":"/tags/%E3%83%90%E3%82%B9/"},{"name":"socket-io","slug":"socket-io","link":"/tags/socket-io/"},{"name":"React","slug":"React","link":"/tags/React/"},{"name":"Node-js","slug":"Node-js","link":"/tags/Node-js/"},{"name":"WSL","slug":"WSL","link":"/tags/WSL/"},{"name":"JavaScript","slug":"JavaScript","link":"/tags/JavaScript/"},{"name":"601lv","slug":"601lv","link":"/tags/601lv/"},{"name":"Android","slug":"Android","link":"/tags/Android/"},{"name":"タブレット","slug":"タブレット","link":"/tags/%E3%82%BF%E3%83%96%E3%83%AC%E3%83%83%E3%83%88/"}],"categories":[]}